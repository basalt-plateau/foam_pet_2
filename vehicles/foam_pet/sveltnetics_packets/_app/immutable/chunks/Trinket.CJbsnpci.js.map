{"version":3,"file":"Trinket.CJbsnpci.js","sources":["../../../../../../node_modules/.pnpm/@skeletonlabs+skeleton@2.10.2_svelte@4.2.19/node_modules/@skeletonlabs/skeleton/dist/components/ListBox/ListBox.svelte","../../../../../../node_modules/.pnpm/@skeletonlabs+skeleton@2.10.2_svelte@4.2.19/node_modules/@skeletonlabs/skeleton/dist/components/ListBox/ListBoxItem.svelte","../../../../../../src/lib/trinkets/Sound/Gem.svelte","../../../../../../src/lib/PTO/Petition/Options_Expiration/index.js","../../../../../../src/lib/PTO/Offline/Petition/Fiberize/index.js","../../../../../../src/lib/taverns/hexadecimal/UTF8.js","../../../../../../src/lib/PTO/Offline/Petition/Envelope/index.js","../../../../../../src/lib/PTO/Offline/Petition/build.js","../../../../../../src/lib/PTO/Offline/Petition_Form/Truck/index.js","../../../../../../src/lib/PTO/Offline/Petition_Form/Truck/Ride.svelte","../../../../../../src/lib/PTO/Account_Module/Ask.js","../../../../../../src/lib/PTO/Offline/Petition_Form/1_Petition_Form/Trinkets/Elector_Address.svelte","../../../../../../src/lib/PTO/Offline/Petition_Form/1_Petition_Form/screenplays/retrieve_modules_for_address.js","../../../../../../src/lib/PTO/Offline/Petition_Form/1_Petition_Form/Trinkets/Elector_Module_Name.svelte","../../../../../../src/lib/PTO/Offline/Petition_Form/1_Petition_Form/screenplays/retrieve_fonctions_for_module.js","../../../../../../src/lib/PTO/Offline/Petition_Form/1_Petition_Form/Trinkets/Elector_Fonction.svelte","../../../../../../src/lib/PTO/Offline/Petition_Form/1_Petition_Form/Trinkets/Elector_Address_of_Flourisher.svelte","../../../../../../src/lib/PTO/Offline/Petition_Form/1_Petition_Form/Trinkets/Elector_Fonction_Parameters.svelte","../../../../../../src/lib/PTO/Offline/Petition_Form/1_Petition_Form/Trinkets/Elector_Fonction_Type_Parameters.svelte","../../../../../../src/lib/PTO/Offline/Petition_Form/1_Petition_Form/screenplays/retrieve_fonction_parameters.js","../../../../../../src/lib/PTO/Offline/Petition_Form/1_Petition_Form/screenplays/retrieve_fonction_type_parameters.js","../../../../../../src/lib/PTO/Offline/Petition_Form/1_Petition_Form/Trinket.svelte","../../../../../../src/lib/PTO/Offline/Petition/Bracket/Gem.svelte","../../../../../../src/lib/PTO/Offline/Petition/Bracket/Details.svelte","../../../../../../src/lib/PTO/Offline/Petition_Form/2_Petition_Verification/Trinket.svelte","../../../../../../src/lib/trinkets/Barcode/Visual_2/creators/make_with_zxing.js","../../../../../../src/lib/trinkets/Barcode/Visual_2/make.js","../../../../../../src/lib/trinkets/Barcode/Visual_2/Trinket.svelte","../../../../../../src/lib/PTO/Offline/Petition_Form/3_Petition_Send/Trinket.svelte","../../../../../../src/lib/PTO/Offline/Petition_Form/4_Flourish_Receive/Trinkets/Barcode_Camera.svelte","../../../../../../src/lib/PTO/Offline/Signatory/fiberize.js","../../../../../../src/lib/PTO/Offline/Petition_Form/4_Flourish_Receive/Trinkets/Hexadecimal.svelte","../../../../../../src/lib/PTO/Offline/Petition_Form/4_Flourish_Receive/Trinket.svelte","../../../../../../src/lib/PTO/Offline/Petition_Form/5_Flourish_Verification/Trinket.svelte","../../../../../../src/lib/PTO/Offline/Petition_Form/6_Adaptation_Suggestion/Trinket.svelte","../../../../../../src/lib/PTO/Offline/Petition_Form/Trinket.svelte","../../../../../../src/lib/PTO/Offline/Signatory_Form/Truck/index.js","../../../../../../src/lib/PTO/Offline/Signatory_Form/Truck/Ride.svelte","../../../../../../src/lib/PTO/Offline/Signatory_Form/1_Petition_Field/Trinkets/Barcode_Eye.svelte","../../../../../../src/lib/PTO/Offline/Signatory_Form/1_Petition_Field/Trinkets/Hexadecimal_String_Field.svelte","../../../../../../src/lib/PTO/Offline/Signatory_Form/1_Petition_Field/Trinket.svelte","../../../../../../src/lib/PTO/Offline/Signatory_Form/2_Petition_Verification/Gem.svelte","../../../../../../src/lib/PTO/Offline/Signatory/sign.js","../../../../../../src/lib/PTO/Offline/Signatory_Form/3_Flourish_Field/Gem.svelte","../../../../../../src/lib/PTO/Offline/Signatory_Form/4_Flourish_Verification/Gem.svelte","../../../../../../src/lib/PTO/Offline/Signatory_Form/5_Flourish_Code/Gem.svelte","../../../../../../src/lib/PTO/Offline/Signatory_Form/Trinket.svelte"],"sourcesContent":["<script>import { setContext } from \"svelte\";\nexport let multiple = false;\nexport let disabled = false;\nexport let spacing = \"space-y-1\";\nexport let rounded = \"rounded-token\";\nexport let active = \"variant-filled\";\nexport let hover = \"hover:variant-soft\";\nexport let padding = \"px-4 py-2\";\nexport let regionLead = \"\";\nexport let regionDefault = \"\";\nexport let regionTrail = \"\";\nexport let labelledby = \"\";\nsetContext(\"disabled\", disabled);\nsetContext(\"multiple\", multiple);\nsetContext(\"rounded\", rounded);\nsetContext(\"active\", active);\nsetContext(\"hover\", hover);\nsetContext(\"padding\", padding);\nsetContext(\"regionLead\", regionLead);\nsetContext(\"regionDefault\", regionDefault);\nsetContext(\"regionTrail\", regionTrail);\nconst cBase = \"\";\n$:\n  classesBase = `${cBase} ${spacing} ${rounded} ${$$props.class ?? \"\"}`;\n</script>\n\n<div class=\"listbox {classesBase}\" role=\"listbox\" aria-labelledby={labelledby} data-testid=\"listbox\">\n\t<slot />\n</div>\n","<script>import { getContext } from \"svelte\";\nexport let group;\nexport let name;\nexport let value;\nexport let disabled = getContext(\"disabled\");\nexport let multiple = getContext(\"multiple\");\nexport let rounded = getContext(\"rounded\");\nexport let active = getContext(\"active\");\nexport let hover = getContext(\"hover\");\nexport let padding = getContext(\"padding\");\nexport let regionLead = getContext(\"regionLead\");\nexport let regionDefault = getContext(\"regionDefault\");\nexport let regionTrail = getContext(\"regionTrail\");\nconst cBase = \"cursor-pointer -outline-offset-[3px]\";\nconst cDisabled = \"opacity-50 !cursor-default\";\nconst cLabel = \"flex items-center space-x-4\";\nlet checked;\nlet elemInput;\nfunction areDeeplyEqual(param1, param2) {\n  if (param1 === param2)\n    return true;\n  if (!(param1 instanceof Object) || !(param2 instanceof Object))\n    return false;\n  const keys1 = Object.keys(param1);\n  const keys2 = Object.keys(param2);\n  if (keys1.length !== keys2.length)\n    return false;\n  for (const key of keys1) {\n    const value1 = param1[key];\n    const value2 = param2[key];\n    if (!areDeeplyEqual(value1, value2))\n      return false;\n  }\n  return true;\n}\n$:\n  if (multiple)\n    updateCheckbox(group);\n$:\n  if (multiple)\n    updateGroup(checked);\nfunction updateCheckbox(group2) {\n  checked = group2.indexOf(value) >= 0;\n}\nfunction updateGroup(checked2) {\n  const index = group.indexOf(value);\n  if (checked2) {\n    if (index < 0) {\n      group.push(value);\n      group = group;\n    }\n  } else {\n    if (index >= 0) {\n      group.splice(index, 1);\n      group = group;\n    }\n  }\n}\nfunction onKeyDown(event) {\n  if ([\"Enter\", \"Space\"].includes(event.code)) {\n    event.preventDefault();\n    elemInput.click();\n  }\n}\nconst cRegionLead = \"\";\nconst cRegionDefault = \"flex-1\";\nconst cRegionTrail = \"\";\n$:\n  selected = multiple ? group.some((groupVal) => areDeeplyEqual(value, groupVal)) : areDeeplyEqual(group, value);\n$:\n  classesActive = selected ? active : !disabled ? hover : \"\";\n$:\n  classesDisabled = disabled ? cDisabled : \"\";\n$:\n  classesBase = `${cBase} ${classesDisabled} ${rounded} ${padding} ${classesActive} ${$$props.class ?? \"\"}`;\n$:\n  classesLabel = `${cLabel}`;\n$:\n  classesRegionLead = `${cRegionLead} ${regionLead}`;\n$:\n  classesRegionDefault = `${cRegionDefault} ${regionDefault}`;\n$:\n  classesRegionTrail = `${cRegionTrail} ${regionTrail}`;\n</script>\n\n<label>\n\t<!-- A11y attributes are not allowed on <label> -->\n\t<div\n\t\tclass=\"listbox-item {classesBase}\"\n\t\tdata-testid=\"listbox-item\"\n\t\trole=\"option\"\n\t\taria-selected={selected}\n\t\ttabindex=\"0\"\n\t\ton:keydown={onKeyDown}\n\t\ton:keydown\n\t\ton:keyup\n\t\ton:keypress\n\t>\n\t\t<!-- NOTE: Don't use `hidden` as it prevents `required` from operating -->\n\t\t<div class=\"h-0 w-0 overflow-hidden\">\n\t\t\t{#if multiple}\n\t\t\t\t<input {disabled} bind:this={elemInput} type=\"checkbox\" {name} {value} bind:checked tabindex=\"-1\" on:click on:change />\n\t\t\t{:else}\n\t\t\t\t<input {disabled} bind:this={elemInput} type=\"radio\" bind:group {name} {value} tabindex=\"-1\" on:click on:change />\n\t\t\t{/if}\n\t\t</div>\n\t\t<!-- <slot /> -->\n\t\t<div class=\"listbox-label {classesLabel}\">\n\t\t\t<!-- Slot: Lead -->\n\t\t\t{#if $$slots.lead}<div class=\"listbox-label-lead {classesRegionLead}\"><slot name=\"lead\" /></div>{/if}\n\t\t\t<!-- Slot: Default -->\n\t\t\t<div class=\"listbox-label-content {classesRegionDefault}\"><slot /></div>\n\t\t\t<!-- Slot: Trail -->\n\t\t\t{#if $$slots.trail}<div class=\"listbox-label-trail {classesRegionTrail}\"><slot name=\"trail\" /></div>{/if}\n\t\t</div>\n\t</div>\n</label>\n","\n<script>\n/*\n\timport Sound_Gem from '$lib/trinkets/Sound/Gem.svelte'\n\tlet sound_gem = \"\"\n\t$:{\n\t\tif (typeof sound_gem === \"object\") {\n\t\t\tsound_gem.pause();\n\t\t\tsound_gem.currentTime = 0;\n\t\t\tsound_gem.play ();\n\t\t}\n\t}\n\t\n\t<Sound_Gem \n\t\tbind:this={ sound_gem }\n\t\tsource=\"/sonors/Beep/Beep.ogg\"\n\t/>\n\t\n\tsound_gem.playa ();\n\t\n*/\n\n\n\nimport { onMount } from 'svelte'\n\nexport let source = \"\"\n\nlet show_gem = \"\"\n\nexport const playa = () => {\n\tif (show_gem) {\n\t\tshow_gem.pause ();\n\t\tshow_gem.currentTime = 0;\n\t\tshow_gem.volume = 1;\n\t\tshow_gem.play ();\n\t}\n\telse {\n\t\tconsole.error (\"The audio show gem could not be found.\");\n\t}\n}\n\nonMount (() => {\n\t// playa ();\n})\n\n</script>\n\n<audio bind:this={ show_gem } >\n\t<source src={ source } type=\"audio/ogg\">\n\tThis browser does not support the audio element.\n</audio>","\n\n\n\n/*\n\timport { pick_expiration } from '$lib/PTO/Petition/Options_Expiration'\n\tconst { expiration_timestamp } = pick_expiration ({ \n\t\tafter_seconds: 600 \n\t})\n*/\n\n/*\n\t\n*/\n\nimport * as Aptos_SDK from \"@aptos-labs/ts-sdk\";\n\nexport const pick_expiration = ({\n\tafter_seconds\n}) => {\n\tconst after_seconds_ = parseInt (after_seconds);\n\tconst expiration_timestamp = new Aptos_SDK.U64 (Math.floor (Date.now () / 1000) + after_seconds_).value;\n\t\n\n\t\n\treturn {\n\t\texpiration_timestamp\n\t}\n}\n\n","\n\n\n/*\n\timport { fiberize_TP_AO } from '$lib/PTO/Offline/Petition/Fiberize'\n\tconst TP_fiberized = fiberize_TP_AO (bracket)\n*/\n\n/*\n\timport { fiberize_TP_bytes } from '$lib/PTO/Offline/Petition/Fiberize'\n\tconst TP_fiberized = fiberize_TP_bytes ({ TP_bytes })\n*/\n\nimport * as Aptos_SDK from \"@aptos-labs/ts-sdk\";\n\nimport { string_from_Uint8Array } from '$lib/taverns/hexadecimal/string_from_Uint8Array'\n\nconst replaces = (key, value) => {\n\tif (typeof value === 'bigint') {\n\t\treturn value.toString ();\n\t}\n\tif (value instanceof Uint8Array) {\n\t\treturn string_from_Uint8Array (value)\n\t}\n\t\n\treturn value;\n}\n\n\nexport const fiberize_TP_AO = (bracket) => {\n\treturn JSON.stringify (bracket, replaces, 4);\n}\n\n\nexport const fiberize_TP_bytes = ({ TP_bytes }) => {\n\tconst deserialized = new Aptos_SDK.Deserializer (TP_bytes);\n\tconst TP_AO = Aptos_SDK.SimpleTransaction.deserialize (deserialized);\n\treturn JSON.stringify (TP_AO, replaces, 4);\n}\n\n","\n\n/*\n\timport { hexadecimal_string_from_UTF8 } from '$lib/taverns/hexadecimal/UTF8'\n\timport { UTF8_from_hexadecimal_string } from '$lib/taverns/hexadecimal/UTF8'\n*/\n\n\nexport const hexadecimal_string_from_UTF8 = (UTF8_string) => {\t\n\tconst utf8Array = new TextEncoder ().encode (UTF8_string);\n\t\n\tlet hexString = '';\n    utf8Array.forEach(byte => {\n        hexString += byte.toString (16).padStart(2, '0'); // Convert to hex and ensure 2 digits\n    });\n\t\t\n\treturn hexString.toUpperCase ();\n}\n\n\nexport const UTF8_from_hexadecimal_string = (hexadecimal_string) => {\t\n\tif (hexadecimal_string.length % 2 !== 0) {\n        throw new Error('Hex string must have an even number of characters.');\n    }\n\n    // Split the hex string into pairs of characters\n    const byteArray = [];\n    for (let i = 0; i < hexadecimal_string.length; i += 2) {\n        byteArray.push(parseInt(hexadecimal_string.substr(i, 2), 16)); // Convert each hex pair to byte\n    }\n\n    // Convert byte array back to a UTF-8 string\n    const decodedString = new TextDecoder().decode(new Uint8Array(byteArray));\n    return decodedString;\n}","\n\n\n/*\n\timport { pack_petition_envelope } from \"$lib/PTO/Offline/Petition/Envelope\"\n\tpack_petition_envelope ({\n\t\tpetition_AO,\n\t\tpetition_hexadecimal_string\n\t});\n*/\n\n/*\n\timport { unpack_petition_envelope } from \"$lib/PTO/Offline/Petition/Envelope\"\n\t\n\tconst {\n\t\tpetition_aptos_object,\n\t\tenvelope_show\n\t} = unpack_petition_envelope ({\n\t\tTPE\n\t});\n*/\n\n/*\n\tTransaction Petition Envelope\n\n\tTPE:\n\t\t* This is what is sent to the signatory\n\t\t* hexadecimal string\n\t\t* condensed\n\t\n\tTPE_fiberized:\n\t\t* This is what is displayed as \"petition bracket\"\n\t\t* not condensed\n*/\n\nimport * as AptosSDK from \"@aptos-labs/ts-sdk\";\n\n\nimport { fiberize_TP_AO, fiberize_TP_bytes } from '$lib/PTO/Offline/Petition/Fiberize'\n\nimport { hexadecimal_string_from_UTF8 } from '$lib/taverns/hexadecimal/UTF8'\nimport { UTF8_from_hexadecimal_string } from '$lib/taverns/hexadecimal/UTF8'\n\nimport { Uint8Array_from_string } from '$lib/taverns/hexadecimal/Uint8Array_from_string'\n\n\nexport const pack_petition_envelope = ({\n\tpetition_AO,\n\tpetition_hexadecimal_string\n}) => {\n\tconst notes = {\n\t\t\n\t}\n\tconst TPE_fiberized = fiberize_TP_AO ({\n\t\tpetition: petition_AO,\n\t\tnotes\n\t});\n\tconst TPE = hexadecimal_string_from_UTF8 (JSON.stringify ({\n\t\tpetition: petition_hexadecimal_string,\n\t\tnotes\n\t}));\n\t\n\treturn {\n\t\tTPE,\n\t\tTPE_fiberized\n\t}\t\n}\n\n\nexport const unpack_petition_envelope = ({\n\tTPE\n}) => {\n\t// console.log ({ TPE });\n\n\tconst UTF8_String = UTF8_from_hexadecimal_string (TPE);\n\t// console.log ({ UTF8_String });\n\t\n\tconst parsed = JSON.parse (UTF8_String);\n\t// console.log ({ parsed });\t\n\t\n\tconst { petition, notes } = parsed;\n\t\n\tconst petition_aptos_object = AptosSDK.SimpleTransaction.deserialize (\n\t\tnew AptosSDK.Deserializer (\n\t\t\tUint8Array_from_string (petition)\n\t\t)\n\t);\n\t\n\tconst envelope_show = fiberize_TP_AO ({\n\t\tpetition: petition_aptos_object,\n\t\tnotes\n\t});\n\t\n\t// console.log ({ petition_aptos_object, envelope_show });\n\t\n\treturn {\n\t\tpetition_hexadecimal_string: petition,\n\t\tpetition_aptos_object,\n\t\tenvelope_show\n\t}\n}\n","\n/*\n\timport { build_entry_petition_AO } from './screenplays/build_entry_petition_AO'\n\tbuild_entry_petition_AO ({\n\t\taddress_signer_hexadecimal_string: \"\",\n\t});\n*/\n\n////\n//\nimport * as Aptos_SDK from \"@aptos-labs/ts-sdk\";\n//\n//\nimport { Uint8Array_from_string } from '$lib/taverns/hexadecimal/Uint8Array_from_string'\nimport { pick_expiration } from '$lib/PTO/Petition/Options_Expiration'\nimport { build_entry_petition_AO as build_entry_petition_AO_ } from '$lib/PTO/Petition/Entry_AO_from_fields'\n//\n//\n////\n\nimport { fiberize_TP_AO, fiberize_TP_bytes } from '$lib/PTO/Offline/Petition/Fiberize'\nimport { hexadecimal_string_from_UTF8 } from '$lib/taverns/hexadecimal/UTF8'\nimport { UTF8_from_hexadecimal_string } from '$lib/taverns/hexadecimal/UTF8'\n\n\nimport { pack_petition_envelope } from \"$lib/PTO/Offline/Petition/Envelope\"\n\t\n\nexport const build_entry_petition_AO = async ({\n\tnet_path,\n\tpetition_fields\n}) => {\n\ttry {\n\t\tconsole.info (\"build_entry_petition_AO\");\n\n\n\n\n\t\t/*\n\t\t\tAptos_SDK.AccountAddress.from (\n\t\t\t\t\tUint8Array_from_string (to_address_hexadecimal_string)\n\t\t\t\t)\n\t\t*/\n\t\tconst { parameters } = petition_fields;\n\t\tconst functionArguments = parameters.map (parameter => {\n\t\t\tif (parameter.name === \"address\") {\n\t\t\t\treturn Aptos_SDK.AccountAddress.from (\n\t\t\t\t\tUint8Array_from_string (parameter.field)\n\t\t\t\t)\n\t\t\t}\n\t\t\t\n\t\t\treturn parameter.field\n\t\t})\n\t\t\n\t\tconst transaction_petition_bracket = {\n\t\t\tsender: Aptos_SDK.AccountAddress.from (\n\t\t\t\tUint8Array_from_string (\n\t\t\t\t\tpetition_fields.signer_hexadecimal_address\n\t\t\t\t)\n\t\t\t),\n\t\t\tdata: {\n\t\t\t\tfunction: (\n\t\t\t\t\tpetition_fields.address + \n\t\t\t\t\t\"::\" +\n\t\t\t\t\tpetition_fields.module_name + \n\t\t\t\t\t\"::\" +\n\t\t\t\t\tpetition_fields.fonction_name\n\t\t\t\t),\n\t\t\t\ttypeArguments: petition_fields.type_parameters,\n\t\t\t\tfunctionArguments\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\texpireTimestamp: pick_expiration ({ \n\t\t\t\t\tafter_seconds: 600\n\t\t\t\t}).expiration_timestamp,\n\t\t\t\tgasUnitPrice: BigInt (100),\n\t\t\t\tmaxGasAmount: BigInt (200000)\n\t\t\t}\n\t\t}\n\t\t\n\t\tconsole.log (\"build_entry_petition_AO::\", {\n\t\t\tnet_path,\n\t\t\ttransaction_petition_bracket\n\t\t})\n\n\n\t\t\n\t\tconst aptos = new Aptos_SDK.Aptos (new Aptos_SDK.AptosConfig ({\t\t\n\t\t\tfullnode: net_path,\n\t\t\tnetwork: Aptos_SDK.Network.CUSTOM\n\t\t}));\n\n\t\t\n\t\tlet TP1_AO;\n\t\ttry {\n\t\t\tTP1_AO = await aptos.transaction.build.simple (transaction_petition_bracket);\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\tcatch (barrier) {\n\t\t\tconsole.warn (barrier.message);\n\t\t\t\n\t\t\treturn {\n\t\t\t\tbarrier: barrier.message\n\t\t\t}\n\t\t}\n\t\t\n\t\tconst TP1_AO_Uint8Array = TP1_AO.bcsToBytes ()\n\t\tconst TP1_AO_hexadecimal_string = string_from_Uint8Array (TP1_AO_Uint8Array)\n\t\tconst TP1_AO_fiberized = fiberize_TP_AO ({ TP_AO: TP1_AO })\n\n\t\t// console.log ({ TP1_AO_hexadecimal_string });\n\t\t// console.log ({ TP1_AO_Uint8Array });\n\n\t\t////\n\t\t//\n\t\t//\t\tThe \"TP2_hexadecimal_string\" is what is sent to the signatory.\n\t\t//\t\t\tPerhaps this should be the \"TP2_AO_Uint8Array\" though.\n\t\t//\n\t\t//\t\tThe TP2 isn't actually equivalent to the TP1.\n\t\t//\t\tThe TP2 is what is parsed on the signatory though.\n\t\t//\n\t\t//\t\tTutorial:\n\t\t//\t\t\t* TP1_AO_hexadecimal_string is converted into bytes\n\t\t//\t\t\t* TP2_AO is built from the TP2_AO_bytes\n\t\t//\n\t\tconst TP2_AO_Uint8Array = Uint8Array_from_string (TP1_AO_hexadecimal_string)\n\t\tconst TP2_AO = Aptos_SDK.SimpleTransaction.deserialize (\n\t\t\tnew Aptos_SDK.Deserializer (\n\t\t\t\tTP2_AO_Uint8Array\n\t\t\t)\n\t\t);\n\t\tconst TP2_fiberized = fiberize_TP_AO ({ TP_AO: TP2_AO })\n\t\tconst TP2_hexadecimal_string = string_from_Uint8Array (TP2_AO_Uint8Array)\n\t\t//\n\t\t//\t\n\t\tconst { TPE, TPE_fiberized } = pack_petition_envelope ({\n\t\t\tpetition_AO: TP2_AO,\n\t\t\tpetition_hexadecimal_string: TP2_hexadecimal_string\n\t\t});\n\t\t\n\t\t//\n\t\t////\n\t\t\n\t\treturn {\n\t\t\tTP2_AO,\n\t\t\tTP2_fiberized,\n\t\t\t\n\t\t\tTP2_AO_Uint8Array,\n\t\t\t\n\t\t\t//\n\t\t\t// Perhaps this is what is sent to the \"APT\" outbound\n\t\t\tTP2_hexadecimal_string,\n\t\t\t\n\t\t\tTPE_fiberized,\n\t\t\t\n\t\t\t//\n\t\t\t// This is what is sent\n\t\t\tTPE,\n\t\t\t\n\t\t\tbarrier: false\n\t\t}\n\t}\n\tcatch (anomaly) {\n\t\ttry {\n\t\t\tconsole.info (\"anomaly:\", anomaly.message);\n\t\t\tconsole.error (anomaly);\n\t\t}\n\t\tcatch (exception) {\n\t\t\tconsole.error (exception);\n\t\t}\n\t\t\n\t\treturn {\n\t\t\tbarrier: anomaly.message\n\t\t}\n\t}\n\t\n\treturn {\n\t\tbarrier: \"Reached code that seemed to be beyond reach.\"\n\t}\n}\n\n","\n/*\n\timport { retrieve_truck } from './index.js'\n\tconst Truck = retrieve_truck ();\n*/\n\n/*\n\tstart:\n\t\trefresh_truck\n*/\n\n/*\n\tend:\n\t\tdestroy_truck\n*/\t\n\nimport { build_truck } from '$lib/trucks'\nimport { build_entry_petition_AO } from '$lib/PTO/Offline/Petition/build'\nimport { ask_for_freight as ask_for_Versies_freight } from '$lib/Versies/Trucks'\n\t\t\n\nconst trucks = {}\nexport const make_truck = () => {\n\tconst Versies_freight = ask_for_Versies_freight ().net_path;\n\tconst net_path = Versies_freight.net_path;\n\t\n\ttrucks [1] = build_truck ({\n\t\tfreight: {\n\t\t\tnet_path,\n\t\t\t\n\t\t\tsound_gem: \"\",\n\t\t\t\n\t\t\tleaf_name: \"Petition Form\",\n\t\t\t\n\t\t\tnext: \"no\",\n\t\t\tnext_note: \"Unfinished\",\n\t\t\tback: \"no\",\n\t\t\tback_note: \"Can't go back\",\n\t\t\t\n\t\t\t\n\t\t\t/*\n\t\t\t\tperhaps:\n\t\t\t\n\t\t\t\tlegend: {\n\t\t\t\t\tPetition Form:\n\t\t\t\t\t\tcan visit: \"yes\"\t\t\n\t\t\t\t\n\t\t\t\t}\n\t\t\t*/\n\t\t\tleaf_numeral: 1,\n\t\t\tleaf_buttons: [ 1, 2, 3, 4, 5, 6 ],\n\t\t\tlegend: {\n\t\t\t\t1: \"Petition Form\",\n\t\t\t\t2: \"Petition Verification\",\n\t\t\t\t3: \"Petition Send\",\n\t\t\t\t4: \"Flourish Receive\",\n\t\t\t\t5: \"Flourish Verification\",\n\t\t\t\t6: \"Adaptation Suggestion\"\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\tleaves: {\n\t\t\t\t\"Petition Form\": {\n\t\t\t\t\t\"next\": \"no\",\n\t\t\t\t\t\"back\": \"no\"\n\t\t\t\t},\n\t\t\t\t\"Petition Verification\": {\n\t\t\t\t\t\"next\": \"no\",\n\t\t\t\t\t\"back\": \"no\"\n\t\t\t\t},\n\t\t\t\t\"Petition Send\": {\n\t\t\t\t\t\"next\": \"no\",\n\t\t\t\t\t\"back\": \"no\"\n\t\t\t\t},\n\t\t\t\tFlourish_Receive: {\n\t\t\t\t\t\"next\": \"no\",\n\t\t\t\t\t\"back\": \"no\",\n\t\t\t\t\t\n\t\t\t\t\t//\n\t\t\t\t\t//\tThis is what is sent to the consensus.\n\t\t\t\t\t//\n\t\t\t\t\t//\n\t\t\t\t\tsignature_Aptos_object: \"\",\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tAptos_object_fiberized: \"\",\n\t\t\t\t\t\n\t\t\t\t\talert_note: \"waiting for the signature\",\n\t\t\t\t\talert_success: \"\",\n\t\t\t\t\talert_problem_1: \"\",\n\t\t\t\t\talert_problem_2: \"\"\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\tAdaptation_Suggestion: {\n\t\t\t\t\t\"next\": \"no\",\n\t\t\t\t\t\"back\": \"no\",\n\t\t\t\t\t\n\t\t\t\t\tadaptation_hash: \"\",\n\t\t\t\t\tadaptation_fiberized: \"\",\n\t\t\t\t\n\t\t\t\t\talert_note: \"\",\n\t\t\t\t\talert_success: \"\",\n\t\t\t\t\talert_problem_1: \"\",\n\t\t\t\t\talert_problem_2: \"\"\t\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tpetition_fields: {\n\t\t\t\tmode: \"\",\n\t\t\t\t\n\t\t\t\taddress: \"\",\n\t\t\t\tmodule_name: \"\",\n\t\t\t\tfonction_name: \"\",\n\t\t\t\t\n\t\t\t\tsigner_hexadecimal_address: \"\",\n\t\t\t\t\n\t\t\t\ttype_parameters: [],\n\t\t\t\tparameters: []\n\t\t\t},\n\t\t\t\n\t\t\tuse_fully_elected_petition_fields: \"no\",\n\t\t\t\n\t\t\tpetition_field_barrier: \"\",\n\t\t\t\n\t\t\tpetition_AO_bracket: {},\n\t\t\tpetition_AO_hexadecimal_string: \"\",\n\t\t\tpetition_AO_Uint8Array: \"\",\n\t\t\tpetition_AO_fiberized: \"\",\n\t\t\t\n\t\t\t//\n\t\t\t//\n\t\t\t//\tenvelope: This is the petition with details\n\t\t\t//\n\t\t\t//\t\tFiberized: \n\t\t\t//\t\t\tThe AO bracket with parsing so as to render.\n\t\t\t//\n\t\t\t//\t\tHexadecimal String: \n\t\t\t//\t\t\t\n\t\t\t//\n\t\t\tpetition_envelope_fiberized: \"\",\n\t\t\tpetition_envelope_hexadecimal_string: \"\",\t\t\n\n\t\t\t\n\t\t\t//\n\t\t\tsignature_hexadecimal_string: \"\",\n\t\t}\n\t});\n\t\n\tlet monitor = trucks [1].monitor (async ({\n\t\tpro_freight, \n\t\toriginal_freight,\n\t\t//\n\t\ttarget,\n\t\t//\n\t\tproperty, \n\t\tvalue\n\t}) => {\n\n\t\t/*\n\t\t\ttarget = bracket_of_freight\n\t\t*/\n\t\ttry {\n\t\t\t\n\t\t\t/*\n\t\t\t\twait for petition modification\n\t\t\t\t\n\t\t\t*/\n\t\t\tif (\n\t\t\t\ttarget === original_freight &&\n\t\t\t\tproperty === \"petition_fields\"\n\t\t\t) {\n\t\t\t\t\n\t\t\t\t/*\n\t\t\t\t\twait for entry fonction\n\t\t\t\t\n\t\t\t\t*/\n\t\t\t\tif (original_freight.petition_fields.mode === \"entry\") {\n\t\t\t\t\tconst { \n\t\t\t\t\t\tbarrier, \n\t\t\t\t\t\tTP2_fiberized,\n\t\t\t\t\t\t\n\t\t\t\t\t\tTP2_AO_Uint8Array,\n\t\t\t\t\t\tTP2_hexadecimal_string,\n\t\t\t\t\t\t\n\t\t\t\t\t\tTPE_fiberized,\n\t\t\t\t\t\tTPE\n\t\t\t\t\t} = await build_entry_petition_AO ({\n\t\t\t\t\t\tnet_path: original_freight.net_path,\n\t\t\t\t\t\tpetition_fields: original_freight.petition_fields\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif (barrier !== false) {\n\t\t\t\t\t\tconsole.error ({ barrier });\n\t\t\t\t\t\tpro_freight.petition_field_barrier = barrier\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpro_freight.petition_AO_fiberized = TP2_fiberized;\n\t\t\t\t\t\tpro_freight.petition_AO_Uint8Array = TP2_AO_Uint8Array;\n\t\t\t\t\t\tpro_freight.petition_AO_hexadecimal_string = TP2_hexadecimal_string;\n\t\t\t\t\t\t\n\t\t\t\t\t\tpro_freight.petition_envelope_fiberized = TPE_fiberized;\n\t\t\t\t\t\tpro_freight.petition_envelope = TPE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/*\n\t\t\t\t\twait for view fonction\n\t\t\t\t\n\t\t\t\t*/\n\t\t\t}\n\t\t}\n\t\tcatch (exception) {\n\t\t\tconsole.error (\"exception\", exception);\n\t\t}\n\t\t\n\t\tif (property === \"leaf_name\") {\n\t\t\t//\n\t\t\t//\n\t\t\t//\tThis modifies the \"next\" & \"back\" buttons.\n\t\t\t//\n\t\t\t//\n\t\t\t// verify_land ()\n\t\t}\n\t})\t\n}\n\n\n\nexport const verify_leaf = ({ } = {}) => {\n\tconst freight = trucks [1].freight;\n\tconst leaf_name = freight.leaf_name;\n\t\n\tif (leaf_name === \"Petition Form\") {\n\t\t\n\t}\n};\n\nexport const next = () => {\n\tconst freight = trucks [1].freight;\n\tconst leaf_name = freight.leaf_name;\n\t\n\t\n}\nexport const back = () => {\n\tconst freight = trucks [1].freight;\n\tconst leaf_name = freight.leaf_name;\n\t\n\t\n}\nexport const go_to = ({ leaf_page }) => {\n\treturn () => {\n\t\tconsole.log (\"go_to\", leaf_page);\n\t\n\t\tconst freight = trucks [1].freight;\n\t\tconst leaf_name = freight.leaf_name;\n\t\t\n\t\tfreight.leaf_numeral = leaf_page;\n\t\tfreight.leaf_name = freight.legend [ leaf_page ]\t\n\t}\n}\n\n\nexport const destroy_truck = () => {\n\tdelete trucks [1];\n}\n\nexport const retrieve_truck = () => {\n\treturn trucks [1];\n}\n\n\n\nexport const monitor_truck = (action) => {\t\n\t\n\t/*\n\t\tThis\n\t*/\n\treturn trucks [1].monitor (async ({ \n\t\tpro_freight, \n\t\toriginal_freight,\n\t\t//\n\t\ttarget,\n\t\t//\n\t\tproperty, \n\t\tvalue\n\t}) => {\n\t\t// console.log (\"petition truck monitor\");\n\t\t\n\t\taction ({\n\t\t\tpro_freight, \n\t\t\toriginal_freight,\n\t\t\t//\n\t\t\ttarget,\n\t\t\t//\n\t\t\tproperty, \n\t\t\tvalue\n\t\t});\n\t})\n}\n\n","\n\n\n\n\n\n\n\n\n<script>\n\n/*\n\t// Create\n\t\n*/\n\n/*\n\timport * as PT from '$lib/PTO/Offline/Petition_Form/Truck/index.js'\n\timport Petition_Truck from '$lib/PTO/Offline/Petition_Form/Truck/Ride.svelte'\n\tlet PT_Freight = false\n\n\n\t<Petition_Truck on_change={ ({ pro_freight }) => { PT_Freight = pro_freight; } } />\n\t{#if typeof PT_Freight === \"object\"}\n\t\n\t{/if}\n*/\n\n/*\n\thappening = \"mounted\"\n\thappening = \"modulated\"\n*/\nimport { onMount, onDestroy } from 'svelte'\nimport { monitor_truck, retrieve_truck } from './index.js'\n\nexport let on_change = () => {}\n\nlet Truck_Monitor;\nonMount (async () => {\n\tTruck_Monitor = monitor_truck (({ pro_freight }) => {\n\t\ton_change ({ \n\t\t\tpro_freight, \n\t\t\thappening: \"modulated\" \n\t\t})\n\t})\n\t\n\ton_change ({ \n\t\tpro_freight: retrieve_truck ().pro_freight, \n\t\thappening: \"mounted\" \n\t})\n});\nonDestroy (() => {\n\tTruck_Monitor.stop ()\n});\n\n\n</script>\n\n<div style=\"position: absolute\"></div>","\n\n/*\n\tcurl --request GET \\\n  --url https://api.mainnet.aptoslabs.com/v1/accounts/${ address }/module/${ module_name }\n*/\n\n/*\n\t// fonctions\n\n\timport { ask_account_module } from '$lib/PTO/Account_Module/Ask'\n\tconst { enhanced } = await ask_account_module ({ \n\t\tnet_path,\n\t\t\n\t\taddress_hexadecimal_string,\n\t\tmodule_name\n\t})\n*/\n\n\n/*\n\t// modules for address\n\n\timport { ask_account_module } from '$lib/PTO/Account_Module/Ask'\n\tconst { enhanced } = await ask_account_module ({ \n\t\tnet_path,\n\t\taddress_hexadecimal_string\n\t})\n*/\n\nimport { Aptos, AptosConfig } from \"@aptos-labs/ts-sdk\";\nimport * as Aptos_SDK from \"@aptos-labs/ts-sdk\";\n\n\nexport const ask_account_module = async ({\n\tnet_path,\n\t\n\taddress_hexadecimal_string,\n\tmodule_name = null\n}) => {\n\tconsole.log ({ net_path })\n\t\n\tif (typeof module_name === \"string\") {\n\t\tconst proceeds = await fetch (\n\t\t\t`${ net_path }/accounts/${ address_hexadecimal_string }/module/${ module_name }`\n\t\t)\n\t\tif (proceeds.status !== 200) {\n\t\t\treturn {\n\t\t\t\tsuccessful: \"no\",\n\t\t\t\tenhanced: await proceeds.json ()\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn {\n\t\t\tsuccessful: \"yes\",\n\t\t\tenhanced: await proceeds.json ()\n\t\t}\n\t}\n\telse {\n\t\tconst proceeds = await fetch (\n\t\t\t`${ net_path }/accounts/${ address_hexadecimal_string }/modules`\n\t\t)\n\t\tconst enhanced = await proceeds.json ()\n\t\t\n\t\treturn {\n\t\t\tenhanced\n\t\t}\n\t}\t\n}\n\n","\n<script>\n\n\nimport { Autocomplete } from '@skeletonlabs/skeleton';\nimport { ListBox, ListBoxItem } from '@skeletonlabs/skeleton';\n\n////\n//\n//\tExports\n//\nexport let address_chosen = () => {}\nexport let endorsed = \"\"\n$: {\n\tlet _endorsed = endorsed;\n\tparse_endorsed_address ();\n}\n//\n////\n\n\nlet endorsed_addresses = \"zero\"\nconst parse_endorsed_address = () => {\n\tconsole.log (\"parse_endorsed_address\");\n\t\n\tendorsed_addresses = \"zero\"\n\t\n\ttry {\n\t\tif (typeof endorsed === \"object\" && endorsed !== null) {\n\t\t\tendorsed_addresses = Object.keys (endorsed) \n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (endorsed === \"every\") {\n\t\t\tendorsed_addresses = \"every\"\n\t\t}\n\t}\n\tcatch (imperfection) {\n\t\tconsole.error (\"parse_endorsed_address:\", imperfection);\n\t}\t\t\n}\n\n\nlet previous_address = \"\"\nlet address = \"\"\n$: {\n\tlet _address = address;\n\t\n\tif (previous_address !== address) {\n\t\tprevious_address = address;\n\t\t\n\t\tif (endorsed_addresses.includes (address)) {\n\t\t\taddress_chosen ({ address });\n\t\t}\n\t\telse if (endorsed_addresses === \"every\") {\n\t\t\taddress_chosen ({ address });\n\t\t}\n\t}\n\t\n\t\n}\n\n\nfunction on_choose (event) {\n\taddress = event.detail.label;\n}\n\nlet auto_complete_style_preset = `\n\tposition: absolute;\n\tz-index: 1;\n`\nlet auto_complete_style = auto_complete_style_preset  + `\n\tdisplay: none;\n`;\nconst on_click = () => {\n\tauto_complete_style = auto_complete_style_preset + `\n\t\tdisplay: block;\n\t`\n}\nconst on_blur = () => {\n\tauto_complete_style = auto_complete_style_preset + `\n\t\tdisplay: none;\n\t`\n}\n\t\t\t\t\n\n</script>\n\n<div\n\tstyle=\"\n\t\tdisplay: flex;\n\t\"\n>\n\t<div>\n\t\t<span \n\t\t\tstyle=\"\n\t\t\t\tpadding: 0.4cm;\n\t\t\t\"\n\t\t\tclass=\"badge variant-ringed-surface\"\n\t\t>Address</span>\n\t</div>\n\n\t<div\n\t\tstyle=\"\n\t\t\twidth: 5px;\n\t\t\"\n\t/>\n\t\n\t<div\n\t\tstyle=\"\n\t\t\twidth: 100%;\n\t\t\"\n\t>\n\t\t{#if true }\n\t\t{#if endorsed_addresses === \"every\" }\t\t\t\n\t\t<input \n\t\t\tbind:value={ address }\n\t\t\n\t\t\tstyle=\"\n\t\t\t\tpadding: 0.25cm;\n\t\t\t\"\n\t\t\tclass=\"input\" \n\t\t\t\n\t\t\ttype=\"search\" \n\t\t\tname=\"demo\" \n\t\t/>\n\t\t{:else if Array.isArray (endorsed_addresses) }\t\t\t\n\t\t<select\n\t\t\tbind:value={ address }\n\t\t\tplaceholder=\"\"\n\t\t\t\n\t\t\tstyle=\"\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\t\n\t\t\t\tborder-width: var(--theme-border-base);\n\t\t\t\tborder-color: rgb(var(--color-surface-400));\n\t\t\t\t\n\t\t\t\tborder-radius: 50px;\n\t\t\t\"\n\t\t\tclass=\"card p-3\"\n\t\t>\n\t\t\t{#each endorsed_addresses as endorsed_address }\n\t\t\t{#if endorsed_address.includes (address) }\n\t\t\t<option \n\t\t\t\ton:click={ on_blur }\n\t\t\t\tname={ endorsed_address }\n\t\t\t\tvalue={ endorsed_address }\n\t\t\t>{ endorsed_address }</option>\n\t\t\t{/if}\n\t\t\t{/each}\n\t\t</select>\n\t\t{/if}\n\t\t{/if}\n\t\t\t\n\t\t\t\n\t\t{#if false }\n\t\t<input \n\t\t\tbind:value={ address }\n\t\t\n\t\t\ton:click={ on_click }\n\t\t\n\t\t\tstyle=\"\n\t\t\t\tpadding: 0.25cm;\n\t\t\t\"\n\t\t\tclass=\"input\" \n\t\t\ttype=\"search\" \n\t\t\tname=\"demo\" \n\t\t/>\n\t\t\n\t\t<div \n\t\t\tstyle={ auto_complete_style }\n\t\t\tclass=\"card w-full max-w-sm max-h-48 p-4 overflow-y-auto\" \n\t\t\ttabindex=\"-1\"\n\t\t>\n\t\t\t{#if Array.isArray (endorsed_addresses) }\t\t\t\n\t\t\t<ListBox>\n\t\t\t\t{#each endorsed_addresses as endorsed_address }\n\t\t\t\t{#if endorsed_address.includes (address) }\n\t\t\t\t<ListBoxItem \n\t\t\t\t\ton:click={ on_blur }\n\t\t\t\t\n\t\t\t\t\tbind:group={ address } \n\t\t\t\t\tname={ endorsed_address }\n\t\t\t\t\tvalue={ endorsed_address }\n\t\t\t\t>{ endorsed_address }</ListBoxItem>\n\t\t\t\t{/if}\n\t\t\t\t{/each}\n\t\t\t</ListBox>\n\t\t\t{/if}\n\t\t</div>\n\t\t{/if}\n\t</div>\n</div>\n\n\n","\n/*\n\n\n\n*/\n\nimport { ask_account_module } from '$lib/PTO/Account_Module/Ask'\n\nexport async function retrieve_modules_for_address ({\n\tnet_path,\n\t\n\taddress_hexadecimal_string\n}) {\n\tconst { enhanced } = await ask_account_module ({ \n\t\tnet_path,\n\t\taddress_hexadecimal_string\n\t});\n\t\n\tconsole.log ({ enhanced });\n\t\n\tconst proceeds = [];\n\tconst les_modules = enhanced;\n\t\n\treturn {\n\t\tles_modules\n\t}\n}","\n<script>\n\nimport { onMount, onDestroy } from 'svelte'\n\nimport { Autocomplete } from '@skeletonlabs/skeleton';\nimport { ListBox, ListBoxItem } from '@skeletonlabs/skeleton';\nimport { popup } from '@skeletonlabs/skeleton';\n\nimport { retrieve_modules_for_address } from './../screenplays/retrieve_modules_for_address'\n\n\n\nlet endorsed_modules = [];\nconst parse_endorsed_modules = () => {\n\tconsole.log ({ address, endorsed });\n\t\n\tendorsed_modules = \"zero\"\n\t\n\ttry {\n\t\tif (endorsed === \"every\") {\n\t\t\tendorsed_modules = \"every\"\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst modules_of_address = endorsed [ address ];\n\t\tconsole.log ({ modules_of_address }, modules_of_address === \"every\");\n\t\t\n\t\t\n\t\t\n\t\tif (modules_of_address === \"every\") {\n\t\t\tendorsed_modules = \"every\"\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst module_names = Object.keys (modules_of_address);\n\t\tconsole.log ({ module_names });\n\t\t\n\t\tif (Array.isArray (module_names)) {\n\t\t\tendorsed_modules = module_names\n\t\t\treturn;\n\t\t}\n\t}\n\tcatch (imperfection) {\n\t\tconsole.error (\"parse_endorsed_modules:\", imperfection);\n\t}\n}\n\n\nexport let net_path = \"\"\nexport let address = \"\"\n$: {\n\tlet _address = address;\n\tconsole.info ({ address });\n\t\n\tparse_endorsed_modules ();\n\taddress_changed ();\n}\n\nexport let endorsed = \"\"\n$: {\n\tparse_endorsed_modules ();\n}\n\nexport let module_name_choosen = () => {}\n\n\n\nlet les_modules = []\n\nconst address_changed = async () => {\n\tconsole.log (\"address changed:\", { endorsed_modules });\n\t\n\tles_modules = [];\n\t\n\tconst { les_modules: _les_modules } = await retrieve_modules_for_address ({\n\t\tnet_path,\n\t\taddress_hexadecimal_string: address\n\t});\n\t_les_modules.sort ((a, b) => {\n\t\tif (a.abi.name < b.abi.name) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a.abi.name > b.abi.name) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n\t\n\tif (endorsed_modules === \"every\") {\n\t\tles_modules = _les_modules;\n\t\treturn;\n\t}\n\t\n\t\n\t\n\tif (Array.isArray (endorsed_modules)) {\n\t\tif (Array.isArray (_les_modules)) {\n\t\t\tconsole.log ({ _les_modules, endorsed_modules });\n\t\t\t\n\t\t\tles_modules = _les_modules.filter (le_module => {\n\t\t\t\t// console.log (\"name:\", le_module.abi.name, endorsed_modules.includes (le_module.abi.name));\n\t\t\t\t\n\t\t\t\tif (endorsed_modules.includes (le_module.abi.name)) {\n\t\t\t\t\tconsole.log (\"name:\", le_module.abi.name, endorsed_modules.includes (le_module.abi.name));\n\t\t\t\t\treturn true;\n\t\t\t\t} \n\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\t\n\t\t\tconsole.log ({ les_modules, _les_modules });\n\t\t}\n\t}\n\t\n\t\n\t\n}\n\n\n\n\nlet mod_name = \"\";\n$: {\n\tlet _mod_name = mod_name;\n\tconsole.log (\"module name changed\", mod_name)\n\tmodule_name_choosen ({ module_name: mod_name });\n}\n\n\n</script>\n\n<div\n\tstyle=\"\n\t\tdisplay: flex;\n\t\"\n>\n\t<div>\n\t\t<span \n\t\t\tstyle=\"\n\t\t\t\tpadding: 0.4cm;\n\t\t\t\"\n\t\t\tclass=\"badge variant-ringed-surface\"\n\t\t>Module</span>\n\t</div>\n\n\t<div\n\t\tstyle=\"\n\t\t\twidth: 5px;\n\t\t\"\n\t/>\n\t\n\t<div\n\t\tstyle=\"\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\"\n\t\t\n\t>\n\t\t<select\n\t\t\tbind:value={ mod_name }\n\t\t\n\t\t\tplaceholder=\"module name\"\n\t\t\t\n\t\t\tstyle=\"\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\t\n\t\t\t\tborder-width: var(--theme-border-base);\n\t\t\t\tborder-color: rgb(var(--color-surface-400));\n\t\t\t\t\n\t\t\t\tborder-radius: 50px;\n\t\t\t\"\n\t\t\tclass=\"card p-3\"\n\t\t>\t\t\n\t\t\t{#each les_modules as le_module }\n\t\t\t<option value={ le_module.abi.name }>{ le_module.abi.name }</option>\n\t\t\t{/each}\n\t\t\t\n\t\t\t{#if les_modules.length === 0 }\n\t\t\t<option value=\"\" disabled></option>\n\t\t\t{/if}\n\t\t</select>\n\t</div>\n\n</div>\n\n\n","\n/*\n\n\n\n*/\n\nimport { ask_account_module } from '$lib/PTO/Account_Module/Ask'\n\nexport async function retrieve_fonctions_for_module ({\n\tnet_path,\n\taddress_hexadecimal_string,\n\tmodule_name\n}) {\n\tconst { enhanced } = await ask_account_module ({ \n\t\tnet_path,\n\t\t\n\t\taddress_hexadecimal_string,\n\t\tmodule_name\n\t});\n\t\n\tconsole.log ({ enhanced });\n\t\n\tconst proceeds = [];\n\tconst les_fonctions = enhanced.abi.exposed_functions;\n\t\n\tles_fonctions.sort((a, b) => {\n\t\tconst priority = (obj) => {\n\t\t\tif (obj.is_view) return 1;        // Prioritize \"is_view\"\n\t\t\tif (obj.is_entry) return 2;       // Then prioritize \"is_entry\"\n\t\t\treturn 3;                          // \"Neither\" comes last\n\t\t};\n\n\t\t// Compare based on priority first\n\t\tconst priorityA = priority(a);\n\t\tconst priorityB = priority(b);\n\n\t\tif (priorityA !== priorityB) {\n\t\t\treturn priorityA - priorityB;    // If priority is different, sort by it\n\t\t}\n\n\t\t// Step 2: If `is_view` or `is_entry` are the same, sort by `name` alphabetically\n\t\treturn a.name.localeCompare(b.name);\n\t});\n\t\n\t/*\n\tles_fonctions.sort((a, b) => {\n\t\tif (a.name < b.name) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a.name > b.name) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n\t*/\n\t\n\treturn {\n\t\tles_fonctions\n\t}\n}\n\n","\n\n<script>\n\nimport { Autocomplete } from '@skeletonlabs/skeleton';\nimport { Accordion, AccordionItem } from '@skeletonlabs/skeleton';\nimport { ListBox, ListBoxItem } from '@skeletonlabs/skeleton';\n//\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\n//\nimport { retrieve_fonctions_for_module } from './../screenplays/retrieve_fonctions_for_module'\n//\n\nlet fonction_choose_accordion_open = true;\nlet le_fonction_index = \"\"\nlet le_fonctions = [];\nlet fonction_found = \"no\"\nlet les_fonctions = []\nlet le_move_explorer_address = \"\"\nlet le_fonction_chosen = \"\"\n\nlet fonction_mode = \"\"\n\nexport let endorsed = \"\";\n\n\n\nexport let fonction_choosen = () => {}\nexport let net_path = \"\"\nexport let address = \"\"\nexport let module_name = \"\"\n$: {\n\tlet _module_name = module_name;\n\tif (typeof module_name === \"string\" && module_name.length >= 1) {\n\t\tparse_endorsed_fonctions ();\n\t\tshow_fonctions ();\n\t\t\n\t}\n}\n\n\n/*\n\t\n\tThis is for showing endorsed fonctions.\n\t\n*/\nlet endorsed_fonctions = [];\nconst parse_endorsed_fonctions = () => {\n\tconsole.log (\"parse_endorsed_fonctions:\", { address, endorsed });\n\t\n\tendorsed_fonctions = \"zero\"\n\t\n\ttry {\n\t\tif (endorsed === \"every\") {\n\t\t\tendorsed_fonctions = \"every\"\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst modules_of_address = endorsed [ address ];\n\t\tconst fonctions_of_module = modules_of_address [ module_name ];\n\t\t\n\t\tconsole.info ({ fonctions_of_module });\n\t\t\n\t\tif (fonctions_of_module === \"every\") {\n\t\t\tendorsed_fonctions = \"every\"\n\t\t\treturn;\n\t\t}\n\t\tif (Array.isArray (fonctions_of_module)) {\n\t\t\tendorsed_fonctions = fonctions_of_module\n\t\t\treturn;\n\t\t}\n\t}\n\tcatch (imperfection) {\n\t\tconsole.error (\"parse_endorsed_fonctions:\", imperfection);\n\t}\n}\n\n\n/*\n\t\n\tThis is for asking for the \"fonctions\" for the \"module\".\n\t\n*/\nconst show_fonctions = async () => {\n\tconsole.log (\"module_name:\", { module_name, address });\n\t\t\n\tconst { les_fonctions: _les_fonctions } = await retrieve_fonctions_for_module ({\n\t\tnet_path,\n\t\t\n\t\taddress_hexadecimal_string: address,\n\t\tmodule_name\n\t});\n\t\n\tconsole.info ({ _les_fonctions, endorsed_fonctions });\n\t\n\tif (endorsed_fonctions === \"every\") {\n\t\tles_fonctions = _les_fonctions;\n\t\treturn;\n\t}\n\t\n\tles_fonctions = _les_fonctions.filter (le_fonction => {\n\t\tif (endorsed_fonctions.includes (le_fonction.name)) {\n\t\t\treturn true;\n\t\t} \n\t\t\n\t\treturn false;\n\t});\n\t\n\tfonction_changed ();\n}\n\n\n/*\n\tle_fonction_chosen\n*/\nconst fonction_changed = () => {\n\tle_fonction_chosen = les_fonctions [ le_fonction_index ]\n\tif (le_fonction_chosen === undefined) {\n\t\tfonction_found = \"no\"\n\t\treturn;\n\t}\n\telse {\n\t\tfonction_found = \"yes\"\n\t}\n\t\n\tlet mode_explorer = \"\"\n\tif (le_fonction_chosen.is_entry) {\n\t\tfonction_mode = \"entry\"\n\t\tmode_explorer = \"run\"\n\t}\n\telse if (le_fonction_chosen.is_view) {\n\t\tfonction_mode = \"view\"\n\t\tmode_explorer = \"view\"\n\t}\n\t\n\tif (le_fonction_chosen) {\n\t\tle_move_explorer_address = [\n\t\t\t\"https://explorer.aptoslabs.com/account\",\n\t\t\taddress,\n\t\t\t\"modules\",\n\t\t\tmode_explorer,\n\t\t\tmodule_name,\n\t\t\tle_fonction_chosen.name\n\t\t].join (\"/\");\t\n\t}\n\t\n\tfonction_choosen ({\n\t\tfonction: le_fonction_chosen,\n\t\tfonction_mode\n\t});\n}\n\nlet fonction_modes_shown = {\n\tview: true,\n\tentry: true\n}\nfunction fonction_modes_shown_toggle (flavor) {\n\tconsole.log (\"fonction_modes_shown_toggle\", flavor);\n\tfonction_modes_shown [flavor] = !fonction_modes_shown [flavor];\n}\n\n</script>\n\n\n<div\n\tstyle=\"\n\t\tborder-width: 4px;\n\t\"\n\tclass=\"card p-2 variant-ringed-primary\"\n>\n\t<Accordion>\n\t\t<AccordionItem open={ fonction_choose_accordion_open }>\n\t\t\t<svelte:fragment slot=\"summary\">\n\t\t\t\t<div\n\t\t\t\t\tstyle=\"\n\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"badge variant-soft-primary\"\n\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\tfont-size: 1.5em;\n\t\t\t\t\t\t\tpadding: 0.25cm;\n\t\t\t\t\t\t\"\n\t\t\t\t\t>function name</div>\n\t\t\t\t\t\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\tmargin-top: 4px;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\tgap: 2px;\n\t\t\t\t\t\t\"\n\t\t\t\t\t\tclass=\"card p-2\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={ `\n\t\t\t\t\t\t\t\tpadding-right: 0.5cm;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t` }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Slang text=\"Function\" /> Mode Filter\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\tgap: 8px;\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{#each Object.keys (fonction_modes_shown) as f}\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\"chip {fonction_modes_shown[f] ? 'variant-filled' : 'variant-soft'}\"\n\t\t\t\t\t\t\t\ton:click={(event) => { \n\t\t\t\t\t\t\t\t\tevent.stopPropagation ();\n\t\t\t\t\t\t\t\t\tfonction_modes_shown_toggle(f); \n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ton:keypress\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{#if false && fonction_modes_shown [f]}<span></span>{/if}\n\t\t\t\t\t\t\t\t<span class=\"capitalize\">{f}</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div style=\"height: 0.25cm\" />\n\t\t\t\t\t\n\t\t\t\t\t<div \n\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\ttext-align: left;\n\t\t\t\t\t\t\"\n\t\t\t\t\t\tclass=\"card p-4\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<a \n\t\t\t\t\t\t\thref={ le_move_explorer_address }\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\tclass=\"anchor\" \n\t\t\t\t\t\t>{ le_move_explorer_address }</a>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</svelte:fragment>\n\t\t\t<svelte:fragment slot=\"content\">\n\t\t\t\t<div\n\t\t\t\t\tclass=\"card p-2\"\n\t\t\t\t\tstyle=\"\n\t\t\t\t\t\theight: 300px;\n\t\t\t\t\t\toverflow-y: scroll;\n\t\t\t\t\t\"\n\t\t\t\t>\n\t\t\t\t\t{#if false }\n\t\t\t\t\t<RadioGroup>\n\t\t\t\t\t\t{#each les_fonctions as le_fonction, index }\t\n\t\t\t\t\t\t{#if (\n\t\t\t\t\t\t\t(fonction_modes_shown.entry === true && le_fonction.is_entry === true) ||\n\t\t\t\t\t\t\t(fonction_modes_shown.view === true && le_fonction.is_view === true)\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<RadioItem \n\t\t\t\t\t\t\tbind:group={ le_fonction.name } \n\t\t\t\t\t\t\tname=\"justify\" \n\t\t\t\t\t\t\tvalue={ le_fonction.name }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{#if le_fonction.is_entry === true }\n\t\t\t\t\t\t\t<span class=\"badge variant-soft\">Entry</span>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{#if le_fonction.is_view === true }\n\t\t\t\t\t\t\t<span class=\"badge variant-soft\">View</span>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{ le_fonction.name }\n\t\t\t\t\t\t</RadioItem>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t{/if}\n\t\t\t\t\n\t\t\t\t\t<ListBox>\n\t\t\t\t\t\t{#each les_fonctions as le_fonction, index }\t\n\t\t\t\t\t\t{#if (\n\t\t\t\t\t\t\t(fonction_modes_shown.entry === true && le_fonction.is_entry === true) ||\n\t\t\t\t\t\t\t(fonction_modes_shown.view === true && le_fonction.is_view === true)\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<ListBoxItem \n\t\t\t\t\t\t\tbind:group={ le_fonction_index } \n\t\t\t\t\t\t\tname=\"medium\" \n\t\t\t\t\t\t\tvalue={ index }\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdisabled={(\n\t\t\t\t\t\t\t\tle_fonction.is_entry !== true &&\n\t\t\t\t\t\t\t\tle_fonction.is_view !== true \n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ton:change={ fonction_changed }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{#if le_fonction.is_entry === true }\n\t\t\t\t\t\t\t\t<span class=\"badge variant-filled\">Entry</span>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{#if le_fonction.is_view === true }\n\t\t\t\t\t\t\t\t<span class=\"badge variant-filled\">View</span>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{ le_fonction.name }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</ListBoxItem>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</ListBox>\n\t\t\t\t</div>\n\t\t\t</svelte:fragment>\n\t\t</AccordionItem>\n\t</Accordion>\n</div>\n","\n<script>\n\n\n/*\n\t<Obtainer_Address_of_Extension_Winch \n\t\taddress_of_flourisher_chosen={ address_of_flourisher_chosen }\n\t/>\n*/\n\n/*\n\t.provider\n*/\n\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\n\nimport Address_Qualities_Trinket from '$lib/trinkets/Address_Qualities/Trinket.svelte'\n\nlet origin_address = {\n\teffective: \"no\",\n\taddress_hexadecimal_string: \"\",\n\texception: \"\"\n}\n\nlet previous_address_hexadecimal_string = \"\"\nconst on_change = ({\n\teffective,\n\taddress_hexadecimal_string,\n\texception\n}) => {\n\t// origin_address.effective = effective;\n\t// origin_address.address_hexadecimal_string = address_hexadecimal_string;\n\t// origin_address.exception = exception;\n\t\n\t\n\tif (previous_address_hexadecimal_string === address_hexadecimal_string) {\n\t\treturn;\n\t}\n\t\n\tprevious_address_hexadecimal_string = address_hexadecimal_string;\n\t\n\tconsole.log (\"on_change:\", { effective, address_hexadecimal_string, exception });\n\t\n\taddress_of_flourisher_chosen ({ \n\t\taddress_of_flourisher: address_hexadecimal_string\n\t})\n}\n\nlet address_trinket = \"\"\nconst on_prepare = () => {\n\taddress_trinket.change_address_hexadecimal_string (\"\")\n}\n\n\nexport let address_of_flourisher_chosen = () => {}\nexport let header_size = \"\"\n\n\n\n\t\t\t\t\n\n</script>\n\n<div class=\"card p-4\">\n\t<div\n\t\tstyle={ `\n\t\t\ttext-align: center;\n\t\t\tfont-size: ${ header_size };\n\t\t\tpadding: 0.25cm 0;\n\t\t` }\n\t>\n\t\t<Slang text=\"Signer\" /> Hexadecimal Address\n\t</div>\n\t\n\t<Address_Qualities_Trinket \n\t\tname=\"\"\n\t\n\t\tbind:this={ address_trinket }\n\t\t\n\t\ton_change={ on_change }\n\t\ton_prepare={ on_prepare }\n\t/>\n</div>\n\n\n","\n\n<script>\n\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\n\nexport let header_size = \"\"\n\nexport let fonction_parameters = []\nexport let on_change = () => {}\n\nconst fonction_parameters_changed = ({ index, contents }) => {\n\t//console.log ({ index, contents });\n\t\n\ton_change ({ index, contents });\n}\n\n</script>\n\n\n<div class=\"card p-4\">\t\n\t<div\n\t\tstyle={ `\n\t\t\ttext-align: center;\n\t\t\tfont-size: ${ header_size };\n\t\t\tpadding: 0.25cm 0;\n\t\t` }\n\t>\n\t\t<Slang text=\"Function\" /> Parameters\n\t</div>\n\t\n\t\n\t{#each fonction_parameters as parameter, index }\n\t<div \n\t\tstyle=\"\n\t\t\ttext-align: left;\n\t\t\"\n\t\tclass=\"card p-1\"\n\t>\n\t\t<div style=\"height: 0.25cm;\"></div>\n\t\n\t\t<div>\n\t\t\t<span \n\t\t\t\tstyle=\"\n\t\t\t\t\tpadding: 0.25cm 0.5cm;\n\t\t\t\t\tfont-size: 1.5em;\n\t\t\t\t\"\n\t\t\t\tclass=\"badge variant-soft-primary\"\n\t\t\t>{ parameter.name }</span>\n\t\t</div>\n\t\t\n\t\t<div style=\"height: 0.1cm;\"></div>\n\t\t\n\t\t<textarea \n\t\t\tstyle=\"\n\t\t\t\tpadding: 0.25cm;\n\t\t\t\"\n\t\t\tclass=\"textarea\"  \n\t\t\t\n\t\t\ton:keyup={(event) => {\n\t\t\t\tconst contents = event.target.value;\n\t\t\t\tfonction_parameters_changed ({\n\t\t\t\t\tindex,\n\t\t\t\t\tcontents\n\t\t\t\t})\n\t\t\t}}\n\t\t/>\n\t</div>\n\t{/each}\n\t\n\t{#if Array.isArray (fonction_parameters) && fonction_parameters.length === 0}\n\t<p\n\t\tstyle=\"\n\t\t\ttext-align: center;\n\t\t\"\n\t>0 Parameters</p>\n\t{/if}\n</div>","\n\n<script>\n\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\n\nexport let header_size = \"\"\n\nexport let on_change = () => {}\nexport let fonction_type_parameters = []\nexport let fonction_type_parameters_changed = () => {\n\t\n}\n\n</script>\n\n<div class=\"card p-4\">\t\n\t<div\n\t\tstyle={ `\n\t\t\ttext-align: center;\n\t\t\tfont-size: ${ header_size };\n\t\t\tpadding: 0.25cm 0;\n\t\t` }\n\t>\n\t\t<Slang text=\"Function\" /> Type Parameters\n\t</div>\n\t\n\t{#each fonction_type_parameters as type_parameter, index }\n\t<div \n\t\tstyle=\"\n\t\t\ttext-align: center;\n\t\t\"\n\t\tclass=\"card p-1\"\n\t>\t\t\t\t\n\t\t<textarea \n\t\t\tbind:value={ fonction_type_parameters [index] }\n\t\t\n\t\t\tstyle=\"\n\t\t\t\tpadding: 0.25cm;\n\t\t\t\"\n\t\t\tclass=\"textarea\"  \n\t\t\ton:change={ fonction_type_parameters_changed }\n\t\t/>\n\t</div>\n\t{/each}\n\t\n\t{#if Array.isArray (fonction_type_parameters) && fonction_type_parameters.length === 0}\n\t<p\n\t\tstyle=\"\n\t\t\ttext-align: center;\n\t\t\"\n\t>0 Type Parameters</p>\n\t{/if}\n</div>\n\n","\n\n/*\n\t[\n\t\t{ \"name\": \"address\", \"field\": \"\" ],\n\t\t[ \"u64\": \"\" ],\n\t\t[ \"address\": \"\" ],\n\t\t[ \"address\": \"\" ]\n\t]\n*/\n\nimport _get from 'lodash/get'\n\nexport let retrieve_fonction_parameters = ({\n\tfonction_selected\n}) => {\n\tlet proceeds = []\n\tlet parameters = []\n\t\n\tif (_get (fonction_selected, \"is_entry\", \"\") === true) {\n\t\tparameters = fonction_selected.params.slice (1);\n\t}\n\tif (_get (fonction_selected, \"is_view\", \"\") === true) {\n\t\tparameters = fonction_selected.params.slice (0);\n\t}\n\n\tparameters.forEach (parameter => {\n\t\tproceeds.push ({\n\t\t\tname: parameter,\n\t\t\tfield: \"\"\n\t\t})\n\t});\n\t\n\treturn proceeds;\n}","\nimport _get from 'lodash/get'\n\nexport let retrieve_fonction_type_parameters = ({\n\tfonction_selected\n}) => {\n\tlet proceeds = []\n\tlet generic_type_params = fonction_selected.generic_type_params.slice (0);\n\t\n\tgeneric_type_params.forEach (generic_type_param => {\n\t\tproceeds.push ({\n\t\t\tname: \"\",\n\t\t\tfield: \"\"\n\t\t})\n\t});\n\t\n\t// console.log ({ generic_type_params });\n\t\n\treturn proceeds;\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n}","\n\n<script>\n\n\n/*\n\tconst petition_fields = {\n\t\tmode: \"entry\",\n\t\t\t\t\t\t\t\t\n\t\taddress: \"0x1\",\n\t\tmodule_name: \"aptos_account\",\n\t\tfonction_name: \"transfer\",\n\n\t\tflourisher_address_hexadecimal: \"991378D74FAC384404B971765BEF7525CCE26C8EFD84B9FF27D202E10D7FFBE5\",\n\n\t\ttype_parameters: [],\n\t\tparameters: [\n\t\t\t{\n\t\t\t\t\"name\": \"address\",\n\t\t\t\t\"field\": \"991378D74FAC384404B971765BEF7525CCE26C8EFD84B9FF27D202E10D7FFBE6\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"u64\",\n\t\t\t\t\"field\": \"1234\"\n\t\t\t}\n\t\t]\n\t}\n\n\t<Petition_Form \n\t\tuse_fully_elected_petition_fields=\"yes\"\n\t\tfully_elected_petition_fields={ petition_fields }\n\t/>\n*/\n\n\n////\n//\n//\nimport _get from 'lodash/get'\n//\nimport { onMount, onDestroy } from 'svelte'\n//\nimport { Autocomplete } from '@skeletonlabs/skeleton';\nimport { ListBox, ListBoxItem } from '@skeletonlabs/skeleton';\nimport { Accordion, AccordionItem } from '@skeletonlabs/skeleton';\nimport { RadioGroup, RadioItem } from '@skeletonlabs/skeleton';\t\n//\n//\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\nimport Code_Wall from '$lib/trinkets/Code_Wall/Trinket.svelte' \n//\nimport { check_roomies_truck } from '$lib/Versies/Trucks'\nimport { ask_account_module } from '$lib/PTO/Account_Module/Ask'\nimport { string_from_Uint8Array } from '$lib/taverns/hexadecimal/string_from_Uint8Array'\n//\n////\n\n\n//\n\n\n/*\n\tCards, Rolls, Roller\n\tElectors\n*/\nimport Elector_Address from \"./Trinkets/Elector_Address.svelte\"\nimport Elector_Module_Name from \"./Trinkets/Elector_Module_Name.svelte\"\nimport Elector_Fonction from \"./Trinkets/Elector_Fonction.svelte\"\nimport Elector_Address_of_Flourisher from \"./Trinkets/Elector_Address_of_Flourisher.svelte\"\nimport Elector_Fonction_Parameters from \"./Trinkets/Elector_Fonction_Parameters.svelte\"\nimport Elector_Fonction_Type_Parameters from \"./Trinkets/Elector_Fonction_Type_Parameters.svelte\"\nimport Elector_Options from \"./Trinkets/Elector_Options.svelte\"\n\n//\nimport { retrieve_fonction_parameters } from './screenplays/retrieve_fonction_parameters'\nimport { retrieve_fonction_type_parameters } from './screenplays/retrieve_fonction_type_parameters'\n\n\n\t\n\nimport * as PT from './../Truck/index.js'\n\n\n////\n//\n//\tTruck Freight\n//\n//\nimport Petition_Truck from '$lib/PTO/Offline/Petition_Form/Truck/Ride.svelte'\nimport Versies_Truck from '$lib/Versies/Trucks.svelte'\n//\nlet PT_Freight = false\nlet Versies_Freight = false\n//\n////\n\n\nlet header_size = \"1.5em\"\n\nlet le_move = {\n\tutf8_string: \"\",\n\texplorer_address: \"\"\n}\n\nlet fonction_search = \"fields\"\n\n\n//\n//\nlet fonction_spot = \"\";\n//\nlet fonction_name_index = \"\"\nlet fonction_name = \"\"\n//\nlet fonction_module_name = \"\"\n//\n//\nlet fonction_mode = \"\"\nlet fonction_found = \"no\"\nlet fonction_selected = {}\n//\n//\nlet fonction_signer_hexadecimal_address = \"\"\n//\nlet fonction_parameters = []\nlet fonction_type_parameters = []\n//\n//\n\nlet build_petition = () => {\n\tvar petition_fields = {\n\t\tmode: fonction_mode,\n\t\t\n\t\tsigner_hexadecimal_address: fonction_signer_hexadecimal_address,\n\t\t\t\t\n\t\taddress: fonction_spot,\n\t\tmodule_name: fonction_module_name,\n\t\tfonction_name: fonction_selected.name,\n\t\t\n\t\ttype_parameters: fonction_type_parameters,\n\t\tparameters: fonction_parameters\n\t};\n\t\n\tconsole.log (`\n\t\n\t\tbuild_petition called!\n\t\t\n\t\t\tfonction_signer_hexadecimal_address: ${ fonction_signer_hexadecimal_address }\n\t\t\n\t\t\tpetition fields: ${ JSON.stringify (petition_fields, null, 4) }\n\t\t\t\n\t`);\n\t\n\tPT_Freight.petition_fields = petition_fields;\n}\n\nlet address_chosen = async ({ address }) => {\n\tconsole.log (\"address_chosen:\", address);\n\t\n\tfonction_spot = address;\n\tfonction_module_name = \"\"\n\t\n\tfonction_found = \"no\"\n}\nlet module_name_choosen = async ({ module_name }) => {\n\tconsole.log (\"module_name_choosen:\", module_name);\n\tfonction_module_name = module_name;\n}\nlet fonction_choosen = async ({ \n\tfonction, \n\tfonction_mode: _fonction_mode\n}) => {\n\tconsole.log (\"fonction_choosen:\", fonction);\n\t\n\tfonction_selected = fonction;\n\tfonction_type_parameters = retrieve_fonction_type_parameters ({ fonction_selected: fonction })\n\tfonction_parameters = retrieve_fonction_parameters ({ fonction_selected: fonction })\n\t\n\tfonction_mode = _fonction_mode;\n\tfonction_found = \"yes\"\n\n\tif (fonction_mode === \"entry\") {\n\t\t\n\t}\n\telse if (fonction_mode === \"view\") {\n\t\t\n\t}\n\telse {\n\t\tthrow new Error (`The fonction_mode \"${ fonction_mode }\" not found.`);\n\t}\n\n\tconsole.log (\"fonction_choosen::\", {\n\t\tfonction_type_parameters,\n\t\tfonction_parameters,\n\t\tfonction_mode,\n\t\tfonction_found\n\t});\n\n\tbuild_petition ();\n}\n\nlet address_of_flourisher_chosen = ({\n\taddress_of_flourisher\n}) => {\n\tconsole.log (\"address_of_flourisher_chosen\", { address_of_flourisher });\n\tfonction_signer_hexadecimal_address = address_of_flourisher;\n\tbuild_petition ();\n}\n\nlet fonction_parameters_changed = ({ index, contents }) => {\n\tfonction_parameters [ index ].field = contents;\n\tbuild_petition ();\n}\n\nlet fonction_type_parameters_changed = ({ index, contents }) => {\n\tfonction_type_parameters [ index ].field = contents;\n\tbuild_petition ();\n}\n\n\n\n\n\n\n</script>\n\n\n<div\n\tstyle=\"\n\t\tdisplay: flex;\n\t\tgap: 0.25cm;\n\t\t\n\t\tflex-direction: column;\n\t\t\n\t\tpadding: 0.25cm;\n\t\"\n>\n\t<Petition_Truck on_change={ ({ pro_freight }) => { PT_Freight = pro_freight; } } />\n\t<Versies_Truck on_change={ ({ freight }) => { Versies_Freight = freight } } />\n\t\n\t{#if (\n\t\ttypeof Versies_Freight === \"object\" && \n\t\ttypeof PT_Freight === \"object\" \n\t)}\n\t\n\t{#if PT_Freight.use_fully_elected_petition_fields === \"yes\" }\n\t<div>\n\t\tThe petition has already been built.\n\t</div>\t\n\t{:else}\n\t<div \n\t\tstyle=\"\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\tgap: 0.1cm;\n\t\t\"\n\t>\t\n\t\t<div\n\t\t\tstyle={ `\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-size: ${ header_size };\n\t\t\t\tpadding: 0;\n\t\t\t` }\n\t\t>\n\t\t\t<Slang text=\"Function\" />\n\t\t</div>\n\t\t\n\t\t<!-- whether to have multiple fields or __::__::__ -->\n\t\t<div\n\t\t\tstyle=\"\n\t\t\t\tdisplay: none;\n\t\t\t\ttext-align: center;\n\t\t\t\"\n\t\t>\n\t\t\t<RadioGroup>\n\t\t\t\t<RadioItem bind:group={ fonction_search } name=\"justify\" value={\"fields\"}>fields</RadioItem>\n\t\t\t\t<RadioItem bind:group={ fonction_search } name=\"justify\" value={\"entire\"}>entire</RadioItem>\n\t\t\t</RadioGroup>\n\t\t</div>\n\t\t\n\t\t<div style=\"height: 0.25cm\" ></div>\n\t\t\n\t\t\n\t\t{#if fonction_search === \"fields\" }\n\t\t<div>\n\t\t\t<div \n\t\t\t\tstyle=\"\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\"\n\t\t\t\tclass=\"card p-4\"\n\t\t\t>\n\t\t\t\t<a \n\t\t\t\t\thref={ le_move.explorer_address }\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\n\t\t\t\t\tstyle=\"\n\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\"\n\t\t\t\t\tclass=\"anchor\" \n\t\t\t\t>{ le_move.explorer_address }</a>\n\t\t\t</div>\n\t\t\t\n\t\t\t<Elector_Address \n\t\t\t\tendorsed={ PT_Freight.endorsed }\n\t\t\t\taddress_chosen={ address_chosen } \n\t\t\t/>\n\t\t\t\n\t\t\t<div style=\"height: 0.1cm\" ></div>\n\t\t\t\n\t\t\t<Elector_Module_Name \n\t\t\t\tendorsed={ PT_Freight.endorsed }\n\t\t\t\n\t\t\t\tnet_path={ Versies_Freight.net_path }\n\t\t\t\n\t\t\t\taddress={ fonction_spot }\n\t\t\t\tmodule_name_choosen={ module_name_choosen }\n\t\t\t/>\n\t\t\t\n\t\t\t<div style=\"height: 0.1cm\" ></div>\n\t\t\t\n\t\t\t<Elector_Fonction \n\t\t\t\tendorsed={ PT_Freight.endorsed }\n\t\t\t\n\t\t\t\tnet_path={ Versies_Freight.net_path }\n\t\t\t\n\t\t\t\taddress={ fonction_spot }\n\t\t\t\tmodule_name={ fonction_module_name }\n\t\t\t\t\n\t\t\t\tfonction_choosen={ fonction_choosen }\n\t\t\t/>\n\t\t</div>\n\t\t{/if}\n\t</div>\n\n\t\n\t{#if fonction_mode === \"entry\" }\n\t<Elector_Address_of_Flourisher \n\t\theader_size={ header_size }\n\t\taddress_of_flourisher_chosen={ address_of_flourisher_chosen }\n\t/>\n\t{/if}\n\t\t\n\tfonction_found: { fonction_found }\t\n\t\t\n\t{#if fonction_found === \"yes\"}\n\t<Elector_Fonction_Parameters \n\t\theader_size={ header_size }\n\t\tbind:fonction_parameters={ fonction_parameters }\n\t\ton_change={ fonction_parameters_changed }\n\t/>\n\t<Elector_Fonction_Type_Parameters \n\t\theader_size={ header_size }\n\t\tbind:fonction_type_parameters={ fonction_type_parameters }\n\t\ton_change={() => {\n\t\t\t\n\t\t}}\n\t/>\n\t<!-- <Options /> -->\n\t{/if}\n\t\n\t<div style=\"height: 2.5cm\" />\n\t\n\t{/if}\n\t{/if}\n\n</div>","\n<script>\n\n\n/*\n\timport Petition2_Bracket from '$lib/PTO/Offline/Petition/Bracket/Gem.svelte'\n\t<Petition2_Bracket \n\t\tpetition_AO_fiberized={}\n\t/>\n*/\n\nimport { Accordion, AccordionItem } from '@skeletonlabs/skeleton';\n\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\nimport Code_Wall from '$lib/trinkets/Code_Wall/Trinket.svelte' \n\nexport let petition_AO_fiberized = \"\"\n\n</script>\n\n<div class=\"card p-1 variant-filled-primary\">\n\t<Accordion>\n\t\t<AccordionItem open>\n\t\t\t<svelte:fragment slot=\"summary\">\n\t\t\t\t<header\n\t\t\t\t\tstyle=\"\n\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\tfont-size: 1em;\n\t\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\t\"\n\t\t\t\t>Bracket</header>\n\t\t\t</svelte:fragment>\n\t\t\t<svelte:fragment slot=\"content\">\n\t\t\t\t<Code_Wall text={ petition_AO_fiberized } />\n\t\t\t</svelte:fragment>\n\t\t</AccordionItem>\n\t</Accordion>\n</div>","\n<script>\n\nimport { Accordion, AccordionItem } from '@skeletonlabs/skeleton';\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\n\n</script>\n\n\n<div class=\"card p-1 variant-filled-primary\">\n\t<Accordion>\n\t\t<AccordionItem>\n\t\t\t<svelte:fragment slot=\"summary\">\n\t\t\t\t<header\n\t\t\t\t\tstyle=\"\n\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\tfont-size: 1em;\n\t\t\t\t\t\"\n\t\t\t\t>Details</header>\n\t\t\t</svelte:fragment>\n\t\t\t<svelte:fragment slot=\"content\">\n\t\t\t\t<div \n\t\t\t\t\tstyle=\"\n\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\"\n\t\t\t\t\tclass=\"card p-4\"\n\t\t\t\t>\n\t\t\t\t\t<p\n\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t\"\n\t\t\t\t\t>This is the <Slang text=\"transaction_petition\"/> with <b>notes</b> as a <b>bracket</b>.</p>\n\t\t\t\t\n\t\t\t\t\t<div style=\"height: 0.25cm\"></div>\n\t\t\t\t\t<hr class=\"!border-t-2\" />\n\t\t\t\t\t<div style=\"height: 0.25cm\"></div>\n\t\t\t\t\t\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<header style=\"font-size: 1.2em; font-weight: bold;\">Fields</header>\n\t\t\t\t\t\t<p>\"petition\" is sent to the <Slang text=\"consensus\"/></p>\n\t\t\t\t\t\t<p>\"notes\" is extra information for the signatory.</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div style=\"height: 0.25cm\"></div>\n\t\t\t\t\t<hr class=\"!border-t-2\" />\n\t\t\t\t\t<div style=\"height: 0.25cm\"></div>\n\t\t\t\t\t\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<header style=\"font-size: 1.2em; font-weight: bold;\">Modifications</header>\n\t\t\t\t\t\t<p>For the purpose of showing the bracket,</p>\n\t\t\t\t\t\t<p>each <b>Uint8Array</b> was adapted into a <b>hexadecimal</b>.</p>\n\t\t\t\t\t\t<p>and each <b>BigInt</b> was adapted into a <b>string</b>.</p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\t<div style=\"height: 0.25cm\"></div>\n\t\t\t\t\t<hr class=\"!border-t-2\" />\n\t\t\t\t\t<div style=\"height: 0.25cm\"></div>\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t<header></header>\n\t\t\t\t\t<p\n\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span>After making sure the <Slang text=\"transaction_petition\" /> is good,<br/></span>\n\t\t\t\t\t\t<span>the <Slang text=\"transaction_petition\" /> as a <b>barcode</b> can be scanned from the next panel.</span>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</svelte:fragment>\n\t\t</AccordionItem>\n\t</Accordion>\n</div>","\n\n\n<script>\n\n////\n//\nimport { onMount, onDestroy } from 'svelte'\n//\n//\n//\n//\nimport * as PT from './../Truck/index.js'\n//\n////\n\n\nimport Petition_Truck from '$lib/PTO/Offline/Petition_Form/Truck/Ride.svelte'\nlet PT_Freight = false\n\n\n\nimport Petition2_Bracket from '$lib/PTO/Offline/Petition/Bracket/Gem.svelte'\nimport Petition2_Bracket_Details from '$lib/PTO/Offline/Petition/Bracket/Details.svelte'\n\t\nimport { Accordion, AccordionItem } from '@skeletonlabs/skeleton';\n\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\nimport Code_Wall from '$lib/trinkets/Code_Wall/Trinket.svelte' \n\n\n</script>\n\n<div\n\tstyle=\"\n\t\tdisplay: flex;\n\t\tgap: 0.25cm;\n\t\t\n\t\tflex-direction: column;\n\t\t\n\t\tpadding: 0.25cm 0.25cm 5cm; \n\t\"\n>\n\t<Petition_Truck on_change={ ({ pro_freight }) => { PT_Freight = pro_freight; } } />\n\t{#if typeof PT_Freight === \"object\"}\n\t<Petition2_Bracket_Details />\n\n\t<div class=\"card p-1 variant-filled-primary\">\n\t\t<Accordion>\n\t\t\t<AccordionItem open>\n\t\t\t\t<svelte:fragment slot=\"summary\">\n\t\t\t\t\t<header\n\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t\tfont-size: 1em;\n\t\t\t\t\t\t\"\n\t\t\t\t\t><Slang text=\"Transaction_Petition\" /> Bracket with Notes</header>\n\t\t\t\t</svelte:fragment>\n\t\t\t\t<svelte:fragment slot=\"content\">\n\t\t\t\t\t<Code_Wall text={ PT_Freight.petition_envelope_fiberized } />\n\t\t\t\t</svelte:fragment>\n\t\t\t</AccordionItem>\n\t\t</Accordion>\n\t</div>\n\t\n\t{/if}\n</div>","\n\n/*\n\tmake_with_zxing ({\n\t\tbarcode_element, \n\t\tpacked_hexadecimal_string,\n\t\tsize\n\t})\n*/\n\nimport { BrowserQRCodeSvgWriter } from '@zxing/browser';\n\n\n/*\n\t<pre\n\t\tstyle=\"\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\"\n\t>\n\t\t<code \n\t\t\tid=\"result\" \n\t\t\tbind:this={ barcode_element }\n\t\t></code>\n\t</pre>\n*/\nexport const make_with_zxing = ({\n\tbarcode_element,\n\tpacked_hexadecimal_string,\n\tsize\n}) => {\n\tconst code_writer = new BrowserQRCodeSvgWriter ()\n\tcode_writer.writeToDom (\n\t\tbarcode_element, \n\t\t// hexadecimal_string,\n\t\tpacked_hexadecimal_string,\n\n\t\tsize, \n\t\tsize\n\t)\n}","\n\n\n\n\n/*\n\timport { make_barcode } from '$lib/Barcode/make'\n\tmake_barcode ({\n\t\tbarcode_element,\n\t\thexadecimal_string: \"\"\n\t})\n*/\n\n/*\n\thttps://www.npmjs.com/package/pako\n*/\n\n\nimport { BrowserQRCodeSvgWriter } from '@zxing/browser';\nimport pako from 'pako';\n\nimport { pack_string } from '../_Screenplays/pack'\nimport { unpack_string } from '../_Screenplays/unpack'\n\nimport { make_with_zxing } from './creators/make_with_zxing'\n// import { make_with_bwip } from './creators/make_with_bwip'\n\n\nexport const make_barcode = ({\n\tbarcode_element, \n\thexadecimal_string,\n\tsize = 500\n}) => {\n\tconst packed_hexadecimal_string = pack_string (hexadecimal_string)\n\tconst unpacked_hexadecimal_string = unpack_string (packed_hexadecimal_string)\n\tconst equal = unpacked_hexadecimal_string === hexadecimal_string;\n\t\n\tif (equal !== true) {\n\t\tconsole.error ({\n\t\t\tequal,\n\t\t\tunpacked_hexadecimal_string,\n\t\t\thexadecimal_string,\n\t\t\tpacked_hexadecimal_string,\n\t\t\t\"packed_hexadecimal_string length\": packed_hexadecimal_string.length,\n\t\t\t\"hexadecimal_string length\": hexadecimal_string.length\n\t\t})\n\t\t\n\t\tthrow new Error (\"The bytecode packing failed.\")\n\t}\n\t\n\t/*\n\tmake_with_bwip ({\n\t\tbarcode_element, \n\t\tpacked_hexadecimal_string,\n\t\tsize\n\t})\n\t*/\n\t\n\tmake_with_zxing ({\n\t\tbarcode_element, \n\t\tpacked_hexadecimal_string,\n\t\tsize\n\t})\n\t\n\treturn;\n}\n\n","\n\n\n\n\n\n\n\n\n<script>\n\n/*\n\timport Barcode_Visual_2 from '$lib/trinkets/Barcode/Visual_2/Trinket.svelte'\n\t<Barcode_Visual_2 \n\t\thexadecimal_string={ }\n\t/>\n*/\n\n/*\n\thttps://www.npmjs.com/package/html5-qrcode\n*/\n\n///\n//\nimport { onMount, onDestroy } from 'svelte';\n//\n//\nimport { loop } from '$lib/taverns/loop'\nimport Alert_Info from '$lib/trinkets/Alerts/Info.svelte'\n//\n//\nimport { make_barcode } from './make'\n//\n//\n//\\\n\n//\n\n\n\nexport let u_int_8_array = \"\"\n$: {\n\tlet _u_int_8_array = u_int_8_array;\n\tconsole.log ({ u_int_8_array });\n}\n\nexport let hexadecimal_string = \"\"\n$: {\n\tlet _hexadecimal_string = hexadecimal_string;\n\t\n\tmake_queue.push ({\n\t\thexadecimal_string\n\t})\n}\n\n\n\n//\n//\nlet use_zxing = \"yes\"\nlet use_bwip = \"no\"\n//\n//\nlet barcode_element = \"\"\nlet prepared = \"no\"\nlet make_queue = []\n//\n//\n\n\n\n\n\nconst make = ({ the_hexadecimal_string }) => {\n\tbarcode_element.innerHTML = '';\n\tprepared = \"no\"\n\t\n\tif (\n\t\ttypeof the_hexadecimal_string === 'string' && \n\t\tthe_hexadecimal_string.length >= 1\n\t) {\n\t\tmake_barcode ({\n\t\t\tbarcode_element,\n\t\t\thexadecimal_string: the_hexadecimal_string,\n\t\t\tsize: 400\n\t\t})\n\t\t\n\t\tprepared = \"yes\"\n\t}\n}\n\n\n/*\n\tMaybe there's better than a queue, but \n\tnot sure how to stop the barcode render function \n\tin the middle.\n*/\nconst loop_1 = loop ({\n\twait: 200,\n\twait_for_response: \"yes\",\n\taction: () => {\n\t\tconsole.log (\"barcode make queue\", make_queue.length);\n\t\t\n\t\tif (make_queue.length >= 1) {\n\t\t\tconst entry = make_queue.shift ();\n\t\t\tmake ({\n\t\t\t\tthe_hexadecimal_string: entry.hexadecimal_string\n\t\t\t})\n\t\t}\n\t}\n})\n\n\n\n\nonMount (() => {\n\tloop_1.play ()\n\t\n\tmake_queue.push ({ hexadecimal_string })\n});\n\nonDestroy (() => {\n\tloop_1.stop ()\n})\n\n\n</script>\n\n\n<div \n\tmonitor=\"barcode visual\"\n\tclass=\"card variant-filled-surface\"\n>\t\t\n\t<div\n\t\tstyle=\"\n\t\t\tmax-width: 500px;\n\t\t\tmargin: 0 auto;\n\t\t\tpadding: 20px;\n\t\t\"\n\t>\n\t\t{#if prepared !== \"yes\"}\n\t\t<Alert_Info \n\t\t\ttext={ \"preparing barcode\" }\n\t\t\tprogress={{\n\t\t\t\tshow: \"yes\"\n\t\t\t}}\n\t\t/>\n\t\t{/if}\n\t\n\t\t{#if use_bwip === \"yes\"}\n\t\t<div \n\t\t\tbind:this={ barcode_element }\n\t\t\tstyle=\"\"\n\t\t></div>\n\t\t{/if}\n\t\t\n\t\t{#if use_zxing === \"yes\"}\n\t\t<pre\n\t\t\tstyle=\"\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: center;\n\t\t\t\"\n\t\t>\n\t\t\t<code \n\t\t\t\tmonitor=\"zxing barcode\"\n\t\t\t\tbind:this={ barcode_element }\n\t\t\t></code>\n\t\t</pre>\n\t\t{/if}\n\t</div>\n</div>","\n\n\n<script>\n\n////\n//\nimport { onMount, onDestroy } from 'svelte'\nimport { RadioGroup, RadioItem } from '@skeletonlabs/skeleton';\n//\n//\n//\n//\n//\nimport * as PT from './../Truck/index.js'\n//\n////\n\nimport Barcode from './Trinkets/Barcode.svelte'\nimport Barcode_Visual_2 from '$lib/trinkets/Barcode/Visual_2/Trinket.svelte'\nimport Code_Wall from '$lib/trinkets/Code_Wall/Trinket.svelte' \nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\n\nimport Petition_Truck from '$lib/PTO/Offline/Petition_Form/Truck/Ride.svelte'\nlet PT_Freight = false\n\n\nlet selected_option = \"barcode\"\n\t\n\n\n\n</script>\n\n<div\n\tstyle=\"\n\t\tdisplay: flex;\n\t\tgap: 0.25cm;\n\t\t\n\t\tflex-direction: column;\n\t\t\n\t\tpadding: 0.25cm;\n\t\"\n>\n\t<Petition_Truck on_change={ ({ pro_freight }) => { PT_Freight = pro_freight; } } />\n\t{#if typeof PT_Freight === \"object\"}\n\n\t<div\n\t\tstyle=\"\n\t\t\tmax-width: 400px;\n\t\t\tmargin: 0 auto;\n\t\t\ttext-align: center;\n\t\t\"\n\t>\n\t\t<RadioGroup \n\t\t\trounded=\"rounded-container-token\" \n\t\t>\t\t\t\t\n\t\t\t<RadioItem \n\t\t\t\tbind:group={ selected_option } \n\t\t\t\tname=\"justify\" \n\t\t\t\tvalue=\"barcode\"\n\t\t\t>\n\t\t\t\t<span monitor=\"barcode\">Barcode</span>\n\t\t\t</RadioItem>\n\t\t\t<RadioItem \n\t\t\t\tbind:group={ selected_option } \n\t\t\t\tname=\"justify\" \n\t\t\t\tvalue=\"hexadecimal\"\n\t\t\t>\n\t\t\t\t<span monitor=\"hexadecimal\">Hexadecimal</span>\n\t\t\t</RadioItem>\n\t\t</RadioGroup>\n\t</div>\n\n\n\t{#if selected_option === \"barcode\"}\n\t<div class=\"card p-4\">\n\t\t<p\n\t\t\tstyle=\"\n\t\t\t\tpadding: 0.5cm 0cm;\n\t\t\t\ttext-align: center;\n\t\t\t\"\n\t\t>\n\t\t\t<span>This <b>Barcode</b> can be scanned and signed by an <Slang text=\"Offline_Machine\" />.</span> \n\t\t</p>\n\t\n\t\t<Barcode_Visual_2\n\t\t\thexadecimal_string={ PT_Freight.petition_envelope }\n\t\t/>\n\t</div>\n\t{:else}\n\t<div class=\"card p-4\">\n\t\t<div monitor=\"hexadecimal\">\n\t\t\t<Code_Wall \n\t\t\t\tcan_clone={ \"yes\" }\n\t\t\t\ttext={ PT_Freight.petition_envelope } \n\t\t\t/>\n\t\t</div>\n\t</div>\n\t{/if}\n\n\n\t{/if}\n</div>","\n\n<script>\n///\n//\nimport * as AptosSDK from \"@aptos-labs/ts-sdk\";\nimport { Html5QrcodeScanner, Html5QrcodeScanType, Html5Qrcode } from \"html5-qrcode\";\nimport { onMount, onDestroy } from 'svelte';\nimport { ConicGradient } from '@skeletonlabs/skeleton';\n//\n//\nimport Barcode_Vision from '$lib/trinkets/Barcode/Vision/Trinket.svelte'\nimport { string_from_Uint8Array } from '$lib/taverns/hexadecimal/string_from_Uint8Array'\nimport { Uint8Array_from_string } from '$lib/taverns/hexadecimal/Uint8Array_from_string'\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\n//\n//\nimport { verify_signature } from './verify_signature'\n//\n//\\\n\n\n/*\n\t\n\n*/\nlet scanned = \"no\"\nlet barcode_vision = \"\"\nconst on_barcode_found = async ({ hexadecimal_string }) => {\n\tconsole.log ('barcode found!')\n\tif (scanned === \"no\") {\n\t\tscanned = \"yes\"\n\t}\n\telse {\n\t\treturn\n\t}\n\t\n\t\n\t/*\n\tfreight.transaction_signature.hexadecimal_string = hexadecimal_string\t\n\tconst transaction_signature_Aptos_object = AptosSDK.AccountAuthenticator.deserialize (\n\t\tnew AptosSDK.Deserializer (\n\t\t\tUint8Array_from_string (\n\t\t\t\tfreight.transaction_signature.hexadecimal_string\n\t\t\t)\n\t\t)\n\t);\n\tfreight.transaction_signature.Aptos_object = transaction_signature_Aptos_object\n\tfreight.transaction_signature.Aptos_object_fiberized = transaction_signature_Aptos_object\n\t*/\n\t\n\t\n\t// verify_signature ({ freight })\n}\n\nconst on_scan_error = () => {\n\t// console.log ('on_error')\n}\n\n\n\n\n</script>\n\n<div>\n\t<div\n\t\tstyle=\"\n\t\t\ttext-align: center;\n\t\t\tpadding: .2cm 0;\n\t\t\"\n\t>\n\t\t<header\n\t\t\tstyle=\"\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-size: 1.5em;\n\t\t\t\tpadding: .2cm 0;\n\t\t\t\"\n\t\t>QR Barcode Camera</header>\n\t\t<p>\n\t\t\t<span>After <Slang text=\"signing\" /> at \"Loyals, Flourishes\",</span>\n\t\t</p>\n\t\t<p>a picture of the <Slang text=\"signature\" /> as a barcode can be recorded here.</p>\n\t\t\n\t\t<div style=\"height: 8px\"></div>\n\t</div>\n\n\t<Barcode_Vision\n\t\tbind:this={ barcode_vision }\n\t\tfound={ on_barcode_found }\n\t/>\n</div>","\n\n\n/*\n\timport { fiberize_signature } from '$lib/PTO/Offline/Signatory/fiberize'\n\tconst fiberized_signature = fiberize_signature (bracket)\n*/\n\nimport * as Aptos_SDK from \"@aptos-labs/ts-sdk\";\n\nimport { string_from_Uint8Array } from '$lib/taverns/hexadecimal/string_from_Uint8Array'\n\nconst replaces = (key, value) => {\n\tif (typeof value === 'bigint') {\n\t\treturn value.toString ();\n\t}\n\tif (value instanceof Uint8Array) {\n\t\treturn string_from_Uint8Array (value)\n\t}\n\t\n\treturn value;\n}\n\n\nexport const fiberize_signature = (bracket) => {\n\treturn JSON.stringify (bracket, replaces, 4);\n}\n\n","\n\n\n\n\n<script>\n\n//\nimport { onMount, onDestroy } from 'svelte';\nimport * as AptosSDK from \"@aptos-labs/ts-sdk\";\n//\n//\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\nimport Petition_Truck from '$lib/PTO/Offline/Petition_Form/Truck/Ride.svelte'\n//\n//\nimport { verify_signature } from './verify_signature'\n//\n\nimport { Uint8Array_from_string } from '$lib/taverns/hexadecimal/Uint8Array_from_string'\nimport { fiberize_signature } from '$lib/PTO/Offline/Signatory/fiberize'\n\n\nimport * as PT from '$lib/PTO/Offline/Petition_Form/Truck/index.js'\nlet PT_Freight = false\n\n\n\nlet button_text = \"Add\"\nlet can_add = true;\n\nlet hexadecimal_string = \"\"\n\n\nconst add_Signature_hexadecimal_string = async () => {\t\t\n\tconsole.log (\"add_Signature_hexadecimal_string\");\n\t\n\t// freight.transaction_signature.hexadecimal_land.added = \"yes\"\n\t\n\t\n\ttry {\n\t\tconst signature_Aptos_object = AptosSDK.AccountAuthenticator.deserialize (\n\t\t\tnew AptosSDK.Deserializer (\n\t\t\t\tUint8Array_from_string (\n\t\t\t\t\tPT_Freight.signature_hexadecimal_string\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t\tPT_Freight.leaves.Flourish_Receive.signature_Aptos_object = signature_Aptos_object\n\t\tPT_Freight.leaves.Flourish_Receive.Aptos_object_fiberized = fiberize_signature (signature_Aptos_object)\n\t\t\n\t\tPT_Freight.leaves.Flourish_Receive.alert_success = \"The signature was added successfully.\"\n\t\tPT_Freight.leaves.Flourish_Receive.alert_note = \"\"\n\t\tPT_Freight.leaves.Flourish_Receive.alert_problem_1 = \"\"\n\t\tPT_Freight.leaves.Flourish_Receive.alert_problem_2 = \"\"\n\t\t\n\t\tPT_Freight.sound_gem.playa ();\n\t\t\n\t\tbutton_text = \"Added\"\n\t}\n\tcatch (anomaly) {\n\t\tconsole.error (anomaly);\n\t\t\n\t\tPT_Freight.leaves.Flourish_Receive.alert_success = \"\"\n\t\tPT_Freight.leaves.Flourish_Receive.alert_note = \"\"\n\t\tPT_Freight.leaves.Flourish_Receive.alert_problem_1 = \"The signature was not added successfully.\"\n\t\tPT_Freight.leaves.Flourish_Receive.alert_problem_2 = anomaly.message;\n\t}\n}\n\n\n</script>\n\n\n<div monitor=\"hexadecimal panel\">\n\t<Petition_Truck on_change={ ({ pro_freight }) => { PT_Freight = pro_freight; } } />\n\t{#if typeof PT_Freight === \"object\"}\n\t\n\n\t<div style=\"padding: 5px 0 10px;\">\n\t\t<header\n\t\t\tstyle=\"\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-size: 1.4em;\n\t\t\t\tpadding: .2cm 0;\n\t\t\t\"\n\t\t><Slang text=\"Signature\" /> Hexadecimal String</header>\n\t\t<p\n\t\t\tstyle=\"\n\t\t\t\ttext-align: center;\n\t\t\t\"\n\t\t>The <Slang text=\"signature\" /> as a hexadecimal string can be pasted here.</p>\n\t</div>\n\t\n\t\n\t<label class=\"label\">\n\t\t<textarea \n\t\t\tmonitor=\"hexadecimal string\"\n\t\t\n\t\t\tbind:value={ PT_Freight.signature_hexadecimal_string }\n\t\t\t\n\t\t\trows=\"4\" \n\t\t\tplaceholder=\"\" \n\t\t\t\n\t\t\tstyle=\"padding: 10px\"\n\t\t\tclass=\"textarea\" \n\t\t/>\n\t</label>\n\n\n\n\t<div style=\"text-align: right; margin-top: 10px;\">\n\t\t<button \n\t\t\tmonitor=\"add hexadecimal string\"\n\t\t\n\t\t\tdisabled={ button_text === \"Added\" }\n\t\t\ton:click={ add_Signature_hexadecimal_string }\n\t\t\t\n\t\t\ttype=\"button\" \n\t\t\t\n\t\t\tstyle=\"padding: 10px 60px\"\n\t\t\tclass=\"btn variant-filled\"\n\t\t\t\n\t\t>{ button_text }</button>\n\t</div>\n\t\n\t{/if}\n</div>\n","\n\n\n<script>\n\n////\n//\nimport { onMount, onDestroy } from 'svelte'\nimport { RadioGroup, RadioItem } from '@skeletonlabs/skeleton';\n//\n//\nimport Barcode_Visual_2 from '$lib/trinkets/Barcode/Visual_2/Trinket.svelte'\nimport Code_Wall from '$lib/trinkets/Code_Wall/Trinket.svelte' \nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\n//\nimport Alert_Success from '$lib/trinkets/Alerts/Success.svelte'\nimport Alert_Problem from '$lib/trinkets/Alerts/Problem.svelte'\nimport Alert_Note from '$lib/trinkets/Alerts/Note.svelte'\n//\nimport Petition_Truck from '$lib/PTO/Offline/Petition_Form/Truck/Ride.svelte'\n//\n//\nimport * as PT from './../Truck/index.js'\n//\n////\nimport Sound_Gem from '$lib/trinkets/Sound/Gem.svelte'\n\t\n\nimport Barcode_Camera from './Trinkets/Barcode_Camera.svelte'\nimport Hexadecimal_String_Field from './Trinkets/Hexadecimal.svelte'\n\n\n\n\nlet PT_Freight = false;\n$:{\n\tlet _PT_Freight = PT_Freight;\n}\n\t\nlet elected_leaf = \"Barcode\";\n\n\n\n\n</script>\n\n<div\n\tstyle=\"\n\t\tdisplay: flex;\n\t\tgap: 0.25cm;\n\t\t\n\t\tflex-direction: column;\n\t\t\n\t\tpadding: 0.25cm;\n\t\"\n>\n\t<Petition_Truck on_change={ ({ pro_freight }) => { PT_Freight = pro_freight; } } />\n\t{#if typeof PT_Freight === \"object\"}\n\t<div\n\t\tstyle=\"\n\t\t\tmax-width: 90%;\n\t\t\tmargin: 0 auto;\n\t\t\tpadding: 0.25cm 0;\n\t\t\t\n\t\t\ttext-align: center;\n\t\t\"\n\t>\n\t\t{#if PT_Freight.leaves.Flourish_Receive.alert_note.length >= 1 }\n\t\t<Alert_Note\n\t\t\ttext={ PT_Freight.leaves.Flourish_Receive.alert_note }\n\t\t\tprogress={{\n\t\t\t\tshow: \"yes\"\n\t\t\t}}\n\t\t/>\n\t\t{/if}\n\t\t\n\t\t{#if PT_Freight.leaves.Flourish_Receive.alert_problem_1.length >= 1 }\n\t\t<Alert_Problem\n\t\t\ttext={ PT_Freight.leaves.Flourish_Receive.alert_problem_1 }\n\t\t\ttext_2={ PT_Freight.leaves.Flourish_Receive.alert_problem_2 }\n\t\t\tprogress={{\n\t\t\t\tshow: \"yes\"\n\t\t\t}}\n\t\t/>\n\t\t{/if}\n\t\t\n\t\t{#if PT_Freight.leaves.Flourish_Receive.alert_success.length >= 1 }\n\t\t<Alert_Success\n\t\t\ttext={ PT_Freight.leaves.Flourish_Receive.alert_success }\n\t\t/>\n\t\t{/if}\n\t</div>\n\n\t<div\n\t\tstyle=\"\n\t\t\ttext-align: center;\n\t\t\"\n\t>\n\t\t<RadioGroup \n\t\t\trounded=\"rounded-container-token\" \n\t\t>\t\t\t\t\n\t\t\t<RadioItem \n\t\t\t\tbind:group={ elected_leaf } \n\t\t\t\tname=\"justify\" \n\t\t\t\tvalue={ \"Barcode\" }\n\t\t\t>\t\n\t\t\t\t<span monitor=\"barcode pad\">Barcode</span>\n\t\t\t</RadioItem>\n\t\t\t<RadioItem \n\t\t\t\tbind:group={ elected_leaf } \n\t\t\t\tname=\"justify\" \n\t\t\t\tvalue={ \"Hexadecimal\" }\n\t\t\t>\n\t\t\t\t<span monitor=\"hexadecimal pad\">Hexadecimal</span>\n\t\t\t</RadioItem>\n\t\t</RadioGroup>\n\t</div>\n\t\n\t<div style=\"height: 0.5cm\" ></div>\n\t<hr class=\"!border-t-2\" />\n\t<div style=\"height: 0.5cm\" ></div>\n\t\n\t<div>\n\t\t{#if elected_leaf === \"Barcode\" }\n\t\t<Barcode_Camera />\n\t\t{:else if elected_leaf === \"Hexadecimal\" }\n\t\t<Hexadecimal_String_Field />\n\t\t{/if}\n\t</div>\n\t\n\t<div style=\"height: 200px\"></div>\n\n\n\n\t{/if}\n</div>","\n\n\n\n<script>\n\nimport { RadioGroup, RadioItem } from '@skeletonlabs/skeleton';\n\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\nimport Code_Wall from '$lib/trinkets/Code_Wall/Trinket.svelte' \n\nimport Petition_Truck from '$lib/PTO/Offline/Petition_Form/Truck/Ride.svelte'\nlet PT_Freight = false\n\n\n\nlet show = \"Bracket\";\n\n\n</script>\n\n<div>\n\t<Petition_Truck on_change={ ({ pro_freight }) => { PT_Freight = pro_freight; } } />\n\t{#if typeof PT_Freight === \"object\"}\n\t<div\n\t\tstyle=\"\n\t\t\ttext-align: center;\n\t\t\tpadding: 0.25cm 0;\n\t\t\"\n\t>\n\t\t<p>This <Slang text=\"signature\" /> should be the same as the one that was created on the other trinket.</p>\n\t</div>\n\t\n\t<div\n\t\tstyle=\"\n\t\t\ttext-align: center;\n\t\t\"\n\t>\n\t\t<RadioGroup>\n\t\t\t<RadioItem bind:group={ show } name=\"justify\" value={ \"Bracket\" }>\n\t\t\t\t<span monitor=\"bracket pad\">Bracket</span>\n\t\t\t</RadioItem>\n\t\t\t<RadioItem bind:group={ show } name=\"justify\" value={ \"Hexadecimal\" }>\n\t\t\t\t<span monitor=\"hexadecimal pad\">Hexadecimal</span>\n\t\t\t</RadioItem>\n\t\t</RadioGroup>\n\t</div>\n\t\n\t<div style=\"padding: 0.25cm 0\" ></div>\n\n\t<div>\n\t\t{#if show === \"Bracket\" }\n\t\t<div monitor=\"signature bracket panel\">\n\t\t\t<Code_Wall text={ PT_Freight.leaves.Flourish_Receive.Aptos_object_fiberized  } />\n\t\t</div>\n\t\t{:else if show === \"Hexadecimal\" }\n\t\t<div monitor=\"signature hexadecimal panel\">\n\t\t\t<!-- <Code_Wall text={  } /> -->\n\t\t</div>\n\t\t{/if}\n\t</div>\n\t\n\t{/if}\n</div>","\n<script>\n\nimport * as AptosSDK from \"@aptos-labs/ts-sdk\"\n\nimport { Accordion, AccordionItem } from '@skeletonlabs/skeleton';\n\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\nimport Code_Wall from '$lib/trinkets/Code_Wall/Trinket.svelte' \n//\nimport Alert_Success from '$lib/trinkets/Alerts/Success.svelte'\nimport Alert_Problem from '$lib/trinkets/Alerts/Problem.svelte'\nimport Alert_Note from '$lib/trinkets/Alerts/Note.svelte'\n//\n\nimport { Uint8Array_from_string } from '$lib/taverns/hexadecimal/Uint8Array_from_string'\n\nimport Petition_Truck from '$lib/PTO/Offline/Petition_Form/Truck/Ride.svelte'\nlet PT_Freight = false\n\n\nlet asked = \"\"\n\n\n\n//\nimport { find_transaction_by_hash } from '$lib/PTO/Transaction/find_by_hash'\n//\n//\n//\n\n\n\nexport const hexadecimal_petition_to_Aptos_Object = (petition_hexadecimal_string) => {\n\treturn AptosSDK.SimpleTransaction.deserialize (\n\t\tnew AptosSDK.Deserializer (\n\t\t\tUint8Array_from_string (petition_hexadecimal_string)\n\t\t)\n\t);\n}\n\nexport const hexadecimal_Signature_to_Aptos_Object = (signature_hexadecimal_string) => {\n\treturn AptosSDK.AccountAuthenticator.deserialize (\n\t\tnew AptosSDK.Deserializer (\n\t\t\tUint8Array_from_string (signature_hexadecimal_string)\n\t\t)\n\t)\n}\t\n\t\n\n\n/*\n\t* suggest enhancement\n\t* wait for enhancement\n\t* search for the enhancement\n*/\nexport const suggest = async () => {\n\tconsole.log (\"suggest\");\n\t\n\ttry {\n\t\tPT_Freight.leaves.Adaptation_Suggestion.alert_note = \"\"\n\t\tPT_Freight.leaves.Adaptation_Suggestion.alert_success = \"\"\n\t\tPT_Freight.leaves.Adaptation_Suggestion.alert_problem_1 = \"\"\n\t\tPT_Freight.leaves.Adaptation_Suggestion.alert_problem_2 = \"\"\n\t\t\n\t\t\n\t\tconst petition_Aptos_Object = hexadecimal_petition_to_Aptos_Object (\n\t\t\tPT_Freight.petition_AO_hexadecimal_string\n\t\t)\n\t\tconst signature_Aptos_Object = hexadecimal_Signature_to_Aptos_Object (\n\t\t\tPT_Freight.signature_hexadecimal_string\n\t\t)\n\t\t\n\t\tPT_Freight.leaves.Adaptation_Suggestion.alert_note = \"waiting for transaction\"\n\t\t\n\t\tconst aptos = new AptosSDK.Aptos (new AptosSDK.AptosConfig ({\t\t\n\t\t\tfullnode: PT_Freight.net_path,\n\t\t\tnetwork: AptosSDK.Network.CUSTOM\n\t\t}));\n\t\t\n\t\t\n\t\tconsole.info ({\n\t\t\tpetition_Aptos_Object,\n\t\t\tsignature_Aptos_Object\n\t\t});\n\t\t\n\t\t//\n\t\t//\n\t\t//\t\tSuggest Enhancement\n\t\t//\n\t\t//\n\t\tconst adaptation = await aptos.transaction.submit.simple ({ \n\t\t\ttransaction: petition_Aptos_Object, \n\t\t\tsenderAuthenticator: signature_Aptos_Object\n\t\t});\n\t\tPT_Freight.leaves.Adaptation_Suggestion.adaptation_hash = adaptation.hash;\n\t\t\n\t\t\n\t\tconsole.log ('waiting for transaction', { adaptation })\n\n\n\t\t//\n\t\t//\n\t\t//\t\tWait\n\t\t//\n\t\t//\n\t\tawait aptos.waitForTransaction ({ \n\t\t\ttransactionHash: adaptation.hash \n\t\t});\n\t\tconsole.log ('Perhaps the adaptation was added.')\n\n\n\t\t//\n\t\t//\n\t\t//\t\tAdaptation Search\n\t\t//\n\t\t//\n\t\tconst { enhanced, transaction_fiberized } = await find_transaction_by_hash ({\n\t\t\tnet_path: PT_Freight.net_path,\n\t\t\ttransaction_hash: adaptation.hash\n\t\t})\n\t\tPT_Freight.leaves.Adaptation_Suggestion.adaptation_fiberized = transaction_fiberized;\n\t\t\n\t\t\n\t\t\n\t\t\n\t\tif (enhanced.success === true) {\n\t\t\tPT_Freight.leaves.Adaptation_Suggestion.alert_note = \"\"\n\t\t\tPT_Freight.leaves.Adaptation_Suggestion.alert_success = \"The consensus added the transaction to the blockchain.\"\n\t\t\tPT_Freight.leaves.Adaptation_Suggestion.alert_problem_1 = \"\"\n\t\t\tPT_Freight.leaves.Adaptation_Suggestion.alert_problem_2 = \"\"\n\t\t}\n\t\telse {\n\t\t\tthrow new Error (`Transaction \"${ adaptation.hash }\" could not be could found.`)\n\t\t}\n\t}\n\tcatch (anomaly) {\n\t\tconsole.error (anomaly)\n\t\t\n\t\tPT_Freight.leaves.Adaptation_Suggestion.alert_note = \"\"\n\t\tPT_Freight.leaves.Adaptation_Suggestion.alert_success = \"\"\n\t\tPT_Freight.leaves.Adaptation_Suggestion.alert_problem_1 = \"The transaction was not added to the blockchain.\"\n\t\tPT_Freight.leaves.Adaptation_Suggestion.alert_problem_2 = anomaly.message;\n\t}\n}\n\n\n\n</script>\n\n<div\n\tstyle=\"\n\t\tdisplay: flex;\n\t\tgap: 0.1cm;\n\t\t\n\t\tflex-direction: column;\n\t\t\n\t\tpadding: 0.25cm;\n\t\"\n>\n\t<Petition_Truck on_change={ ({ pro_freight }) => { PT_Freight = pro_freight; } } />\n\t{#if typeof PT_Freight === \"object\"}\n\n\n\t<div\n\t\tstyle=\"\n\t\t\ttext-align: center;\n\t\t\"\n\t>\n\t\t<header\n\t\t\tstyle=\"\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-size: 2em;\n\t\t\t\tpadding: .2cm 0;\n\t\t\t\"\n\t\t><Slang text=\"Transaction\" /> Suggestion</header>\n\t\t\n\t\t<div style=\"height: 0.5cm\"></div>\n\t</div>\t\n\t\n\t\n\n\t<div class=\"card\">\n\t\t<Accordion>\n\t\t\t<AccordionItem>\n\t\t\t\t<svelte:fragment slot=\"summary\">\n\t\t\t\t\t<div \n\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t\"\n\t\t\t\t\t\tclass=\"card p-2 variant-filled-primary\"\n\t\t\t\t\t>Hints</div>\n\t\t\t\t</svelte:fragment>\n\t\t\t\t<svelte:fragment slot=\"content\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"p-4\"\n\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<p\n\t\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\t\tfont-size: 1.1em;\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t><Slang text=\"Petition\" /> + <Slang text=\"Signature\" /> + <Slang text=\"Consensus\" /> approval = <Slang text=\"Transaction\" /> to <Slang text=\"Blockchain\" /></p>\n\t\t\t\t\t</div>\n\t\t\t\t</svelte:fragment>\n\t\t\t</AccordionItem>\n\t\t</Accordion>\n\t</div>\n\t\n\t\n\t<div class=\"card\">\n\t\t<Accordion>\n\t\t\t<AccordionItem>\n\t\t\t\t<svelte:fragment slot=\"summary\">\n\t\t\t\t\t<div \n\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t\"\n\t\t\t\t\t\tclass=\"card p-2 variant-filled-primary\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Slang text=\"Signature\" />\n\t\t\t\t\t</div>\n\t\t\t\t</svelte:fragment>\n\t\t\t\t<svelte:fragment slot=\"content\">\n\t\t\t\t\t<div class=\"card p-1 variant-filled-surface\">\n\t\t\t\t\t\t<Code_Wall text={ PT_Freight.leaves.Flourish_Receive.Aptos_object_fiberized  } />\n\t\t\t\t\t</div>\n\t\t\t\t</svelte:fragment>\n\t\t\t</AccordionItem>\n\t\t</Accordion>\n\t</div>\n\t\n\t<div class=\"card\">\n\t\t<Accordion>\n\t\t\t<AccordionItem>\n\t\t\t\t<svelte:fragment slot=\"summary\">\n\t\t\t\t\t<div \n\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t\"\n\t\t\t\t\t\tclass=\"card p-2 variant-filled-primary\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Slang text=\"Transaction_Petition\" />\n\t\t\t\t\t</div>\n\t\t\t\t</svelte:fragment>\n\t\t\t\t<svelte:fragment slot=\"content\">\n\t\t\t\t\t<div class=\"card p-1 variant-filled-surface\">\n\t\t\t\t\t\t<Code_Wall text={ PT_Freight.petition_AO_fiberized  } />\n\t\t\t\t\t</div>\n\t\t\t\t</svelte:fragment>\n\t\t\t</AccordionItem>\n\t\t</Accordion>\n\t</div>\n\n\t<div style=\"height: 0.5cm\"></div>\n\n\t<div\n\t\tclass=\"card p-4\"\n\t\tstyle=\"\n\t\t\ttext-align: center;\n\t\t\"\n\t>\n\t\t<div style=\"height: 1cm\"></div>\n\t\n\t\t<p>\n\t\t\t<span style=\"display: block;\">To Suggest the <Slang text=\"Petition\" /> with <Slang text=\"Signature\" /> to the <Slang text=\"Consensus\" />,\n\t\t\t<span style=\"display: block;\">press <b>Suggest</b>.</span>\n\t\t</p>\n\t\n\t\t<div style=\"height: 1cm\"></div>\n\t\n\t\t<button \n\t\t\tmonitor=\"suggestion pad\"\n\t\t\t\n\t\t\ton:click={ suggest }\n\t\t\tdisabled={ asked === \"yes\" }\n\t\t\n\t\t\t\n\t\t\ttype=\"button\" \n\t\t\tclass=\"btn variant-filled-primary\"\n\t\t\tstyle=\"\n\t\t\t\twhite-space: preserve;\n\t\t\t\tword-wrap: break-word;\n\t\t\t\t\n\t\t\t\t_width: 200px;\n\t\t\t\t_border: 0.25cm solid rgb(var(--color-tertiary-500));\n\t\t\t\t\n\t\t\t\tpadding: 0.5cm 1.5cm;\n\t\t\t\t\n\t\t\t\tfont-size: 1.5em;\n\t\t\t\"\n\t\t\t\n\t\t>Suggest</button>\n\t\t\n\t\t<div style=\"height: 1cm\"></div>\t\t\n\t</div>\n\t\n\t<div\n\t\tstyle=\"\n\t\t\tmax-width: 90%;\n\t\t\tmargin: 0 auto;\n\t\t\tpadding: 0.25cm 0;\n\t\t\t\n\t\t\ttext-align: center;\n\t\t\"\n\t>\n\t\t{#if PT_Freight.leaves.Adaptation_Suggestion.alert_note.length >= 1 }\n\t\t<Alert_Note\n\t\t\ttext={ PT_Freight.leaves.Adaptation_Suggestion.alert_note }\n\t\t\tprogress={{\n\t\t\t\tshow: \"yes\"\n\t\t\t}}\n\t\t/>\n\t\t{/if}\n\t\t\n\t\t{#if PT_Freight.leaves.Adaptation_Suggestion.alert_problem_1.length >= 1 }\n\t\t<Alert_Problem\n\t\t\ttext={ PT_Freight.leaves.Adaptation_Suggestion.alert_problem_1 }\n\t\t\ttext_2={ PT_Freight.leaves.Adaptation_Suggestion.alert_problem_2 }\n\t\t\tprogress={{\n\t\t\t\tshow: \"no\"\n\t\t\t}}\n\t\t/>\n\t\t{/if}\n\t\t\n\t\t{#if PT_Freight.leaves.Adaptation_Suggestion.alert_success.length >= 1 }\n\t\t<Alert_Success\n\t\t\ttext={ PT_Freight.leaves.Adaptation_Suggestion.alert_success }\n\t\t/>\n\t\t{/if}\n\t</div>\n\t\n\t\n\t{#if PT_Freight.leaves.Adaptation_Suggestion.adaptation_fiberized.length >= 1}\n\t<hr class=\"!border-t-4\" style=\"margin: 5px 0\"/>\n\t<div class=\"card p-2\">\n\t\t<Accordion>\n\t\t\t<AccordionItem open>\n\t\t\t\t<svelte:fragment slot=\"summary\">\n\t\t\t\t\t<header\n\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t\tfont-size: 1em;\n\t\t\t\t\t\t\"\n\t\t\t\t\t>The <Slang text=\"Blockchain_Transaction\" /> on the <Slang text=\"Blockchain\" /></header>\n\t\t\t\t</svelte:fragment>\n\t\t\t\t<svelte:fragment slot=\"content\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Code_Wall\n\t\t\t\t\t\t\ttext={ PT_Freight.leaves.Adaptation_Suggestion.adaptation_fiberized }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</svelte:fragment>\n\t\t\t</AccordionItem>\n\t\t</Accordion>\n\t</div>\n\t{/if}\n\t\n\t\n\t<div style=\"height: 5cm\"></div>\t\t\n\n\t{/if}\n</div>","\n\n<script>\n\n/*\t\n\tconst petition_fields = {\n\t\tmode: \"entry\",\n\t\t\t\t\t\t\t\t\t\n\t\taddress: \"0x1\",\n\t\tmodule_name: \"aptos_account\",\n\t\tfonction_name: \"transfer\",\n\n\t\tsigner_hexadecimal_address: \"991378D74FAC384404B971765BEF7525CCE26C8EFD84B9FF27D202E10D7FFBE5\",\n\t\t\n\t\ttype_parameters: [],\n\t\tparameters: [\n\t\t\t{\n\t\t\t\t\"name\": \"address\",\n\t\t\t\t\"field\": \"991378D74FAC384404B971765BEF7525CCE26C8EFD84B9FF27D202E10D7FFBE6\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"u64\",\n\t\t\t\t\"field\": \"1234\"\n\t\t\t}\n\t\t]\n\t}\t\n\t\n\tconst endorsed = \"every\"\n\tconst endorsed = \"zero\"\n\t\n\tconst endorsed = {\n\t\t\"0x1\": \"every\",\n\t\t\"0x4939\": {\n\t\t\t\"module_1\": \"every\",\n\t\t\t\"module_2\": [ \"fonction_1\" ]\t\t\t\t\n\t\t}\n\t}\n\t\n\tconst endorsed = {\n\t\t\"0x1\": \"every\",\n\t\t\"0x4939\": {\n\t\t\t\"module_1\": \"every\",\n\t\t\t\"module_2\": [ \"fonction_1\" ]\t\t\t\t\n\t\t}\n\t}\n\t\t\n\t<Offline_Petition \n\t\tuse_fully_elected_petition_fields=\"yes\"\n\t\tfully_elected_petition_fields={ petition_fields }\n\t\tendorsed={ endorsed }\n\t/>\n*/\n\n/*\n\tlib/Milieus/Venues/Scholars/Resilience/Adaptation Prebuilt\n*/\n\n\n////\n//\nimport { onMount, onDestroy } from 'svelte';\nimport { Paginator } from '@skeletonlabs/skeleton';\nimport { Accordion, AccordionItem } from '@skeletonlabs/skeleton';\nimport { RadioGroup, RadioItem } from '@skeletonlabs/skeleton';\t\n//\n//\nimport Leaf from '$lib/trinkets/Layout/Leaf/Trinket.svelte'\nimport Sound_Gem from '$lib/trinkets/Sound/Gem.svelte'\nimport Versies_Truck from '$lib/Versies/Trucks.svelte'\nimport Petition_Truck from '$lib/PTO/Offline/Petition_Form/Truck/Ride.svelte'\nimport * as PT from '$lib/PTO/Offline/Petition_Form/Truck/index.js'\n//\n//\nimport Petition_Form from './1_Petition_Form/Trinket.svelte'\nimport Petition_Verification from './2_Petition_Verification/Trinket.svelte'\nimport Petition_Send from './3_Petition_Send/Trinket.svelte'\nimport Flourish_Receive from './4_Flourish_Receive/Trinket.svelte'\nimport Flourish_Verification from './5_Flourish_Verification/Trinket.svelte'\nimport Adaptation_Suggestion from './6_Adaptation_Suggestion/Trinket.svelte'\n//\n//\n////\n\n\n\nexport let use_fully_elected_petition_fields = \"no\"\nexport let fully_elected_petition_fields = {}\nexport let endorsed = \"\"\n\nlet PT_Freight = false;\n$: {\n\tlet _PT_Freight = PT_Freight;\n\tbuild_petition ();\n}\n\nlet Versies_Freight = false;\n$: {\n\tlet _Versies_Freight = Versies_Freight;\n\tbuild_petition ();\n}\n\t\nlet built = \"no\"\nlet build_petition = () => {\t\n\tif (\n\t\tPT_prepared === \"yes\" &&\n\t\ttypeof PT_Freight === \"object\" &&\n\t\ttypeof Versies_Freight === \"object\" &&\n\t\tbuilt === \"no\"\n\t) {\n\t\tbuilt = \"yes\"\n\t\t\n\t\tconsole.log (`\n\t\t\tPT_Freight: ${ PT_Freight }\n\t\t\n\t\t\tbuild_petition called:\n\t\t\t\tpetition fields: ${ JSON.stringify (fully_elected_petition_fields, null, 4) }\n\t\t`);\n\n\t\tPT_Freight.net_path = Versies_Freight.net_path;\n\t\tPT_Freight.endorsed = endorsed;\n\t\t\n\t\tif (use_fully_elected_petition_fields === \"yes\") {\n\t\t\tPT_Freight.use_fully_elected_petition_fields = \"yes\"\t\n\t\t\tPT_Freight.petition_fields = fully_elected_petition_fields;\n\t\t}\n\t\telse {\n\t\t\tPT_Freight.use_fully_elected_petition_fields = \"no\"\t\n\t\t\tPT_Freight.petition_fields = {};\n\t\t}\n\t}\n}\n\nlet le_buttons = [ 1, 2, 3, 4, 5, 6 ]\n\nlet PT_prepared = \"no\"\nonMount (async () => {\t\n\tPT.make_truck ()\n\t\n\tif (use_fully_elected_petition_fields === \"yes\") {\n\t\tbuild_petition ();\n\t}\t\n\t\n\tPT_prepared = \"yes\"\n});\nonDestroy (() => {\n\tPT.destroy_truck ()\n});\n\n</script>\n\n{#if PT_prepared === \"yes\" }\n<div \n\tstyle=\"\n\t\tposition: relative;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\"\n\tclass=\"card\"\n>\n\t<Versies_Truck on_change={ ({ freight }) => { Versies_Freight = freight } } />\n\t<Petition_Truck on_change={ ({ pro_freight }) => { PT_Freight = pro_freight; } } />\n\n\t{#if typeof PT_Freight === \"object\" && typeof Versies_Freight === \"object\"}\n\t<Sound_Gem \n\t\tbind:this={ PT_Freight.sound_gem }\n\t\tsource=\"/sonors/Beep/Beep.ogg\"\n\t/>\n\t\n\t<div\n\t\tstyle=\"\n\t\t\tposition: absolute;\n\t\t\theight: 30px;\n\t\t\twidth: 100%;\n\t\t\t\n\t\t\tbox-sizing: border-box;\n\t\t\t\n\t\t\tborder-bottom: 2px solid black;\n\t\t\tborder-bottom-left-radius: 0;\n\t\t\tborder-bottom-right-radius: 0;\n\t\n\t\t\tborder-top-left-radius: 8x;\n\t\t\tborder-top-right-radius: 8px;\t\n\t\t\"\n\t>\n\t\t<header\n\t\t\tstyle=\"\n\t\t\t\tposition: relative;\n\t\t\t\t\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: center;\n\t\t\t\talign-items: center;\n\t\t\t\t\n\t\t\t\theight: 100%;\n\t\t\t\twidth: 100%;\n\t\t\t\"\n\t\t>\n\t\t\t{ PT_Freight.leaf_name }\n\t\t</header>\n\t</div>\n\t\n\t\n\t<div\n\t\tstyle=\"\n\t\t\tposition: absolute;\n\t\t\ttop: 30px;\n\t\t\theight: calc(100% - 80px);\n\t\t\twidth: 100%;\n\t\t\toverflow-y: scroll;\n\t\t\"\n\t>\n\t\t<div\n\t\t\tstyle=\"\n\t\t\t\tborder-bottom: 2px solid black;\n\t\t\t\tborder-bottom-left-radius: 0;\n\t\t\t\tborder-bottom-right-radius: 0;\n\t\t\n\t\t\t\tborder-top-left-radius: 8x;\n\t\t\t\tborder-top-right-radius: 8px;\n\t\t\t\"\n\t\t>\n\t\t\t<Accordion>\n\t\t\t\t<AccordionItem>\n\t\t\t\t\t<svelte:fragment slot=\"summary\">petition freight</svelte:fragment>\n\t\t\t\t\t<svelte:fragment slot=\"content\">\n\t\t\t\t\t\t<pre>{ PT_Freight.petition_field_barrier }</pre>\n\t\t\t\t\t\t<pre>{ JSON.stringify (PT_Freight, null, 2) }</pre>\n\t\t\t\t\t</svelte:fragment>\n\t\t\t\t</AccordionItem>\n\t\t\t</Accordion>\n\t\t</div>\n\n\t\t<div\n\t\t\tstyle=\"\"\n\t\t>\n\t\t\t{#if PT_Freight.leaf_name === \"Petition Form\" }\n\t\t\t<Petition_Form />\n\t\t\t{:else if PT_Freight.leaf_name === \"Petition Verification\" }\n\t\t\t<Petition_Verification />\n\t\t\t{:else if PT_Freight.leaf_name === \"Petition Send\" }\n\t\t\t<Petition_Send />\n\t\t\t{:else if PT_Freight.leaf_name === \"Flourish Receive\" }\n\t\t\t<Flourish_Receive />\n\t\t\t{:else if PT_Freight.leaf_name === \"Flourish Verification\" }\n\t\t\t<Flourish_Verification />\n\t\t\t{:else if PT_Freight.leaf_name === \"Adaptation Suggestion\" }\n\t\t\t<Adaptation_Suggestion />\n\t\t\t{/if}\n\t\t</div>\n\t</div>\n\t\n\n\t<div\n\t\tstyle=\"\n\t\t\tposition: absolute;\n\t\t\tbottom: 0;\n\t\t\tleft: 0;\n\t\t\t\n\t\t\twidth: 100%;\n\t\t\theight: 50px;\n\t\t\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\tgap: 0.25cm;\n\t\t\t\n\t\t\tpadding: 0.2cm;\n\t\t\t\n\t\t\tborder-top: 2px solid black;\n\t\t\tborder-top-left-radius: 0;\n\t\t\tborder-top-right-radius: 0;\n\t\n\t\t\tborder-bottom-left-radius: 8x;\n\t\t\tborder-bottom-right-radius: 8px;\t\t\t\n\t\t\"\n\t\tclass=\"card\"\n\t>\n\t\t<button\n\t\t\ttype=\"button\" class=\"btn variant-filled\"\n\t\t\tdisabled={ PT_Freight.back !== \"yes\" }\n\t\t\t\n\t\t\ton:click={ PT.back }\n\t\t>back</button>\n\t\t\n\t\t<!-- class=\"btn-group variant-filled\" -->\n\t\t<div\n\t\t\tstyle=\"\n\t\t\t\tdisplay: flex;\n\t\t\t\"\n\t\t>\n\t\t\t{#each PT_Freight.leaf_buttons as leaf_button }\n\t\t\t<button\n\t\t\t\tstyle=\"\n\t\t\t\t\tmargin: 0 2px;\n\t\t\t\t\tpadding: 0.25cm 0.5cm;\n\t\t\t\t\"\n\t\t\t\tclass={(\n\t\t\t\t\t[ \n\t\t\t\t\t\t\"chip\",\n\t\t\t\t\t\tPT_Freight.leaf_numeral === leaf_button ? \"variant-filled\" : \"variant-soft\"\t\n\t\t\t\t\t].join (\" \")\n\t\t\t\t)}\n\t\t\t\ton:click={ \n\t\t\t\t\tPT.go_to ({ leaf_page: leaf_button }) \n\t\t\t\t}\n\t\t\t>{ leaf_button }</button>\n\t\t\t{/each}\n\t\t</div>\n\t\t\t\t\n\t\t<button\n\t\t\ttype=\"button\" \n\t\t\tclass=\"btn variant-filled\"\n\t\t\tdisabled={ PT_Freight.next !== \"yes\" }\n\t\t\t\n\t\t\ton:click={ PT.next }\n\t\t>next</button>\t\t\t\n\t</div>\n\t{/if}\n</div>\n{/if}","\n/*\n\timport { retrieve_truck } from './index.js'\n\tconst Truck = retrieve_truck ();\n*/\n\n/*\n\tstart:\n\t\trefresh_truck\n*/\n\n/*\n\tend:\n\t\tdestroy_truck\n*/\t\n\nimport { build_truck } from '$lib/trucks'\nimport { build_entry_petition_AO } from './screenplays/build_entry_petition_AO'\nimport { ask_for_freight as ask_for_Versies_freight } from '$lib/Versies/Trucks'\n\n\nconst trucks = {}\nexport const make_truck = () => {\n\tconst Versies_freight = ask_for_Versies_freight ().net_path;\n\tconst net_path = Versies_freight.net_path;\n\n\t\n\ttrucks [1] = build_truck ({\n\t\tfreight: {\n\t\t\tnet_path,\n\t\t\t\n\t\t\tsound_gem: \"\",\n\t\t\t\n\t\t\tleaf_name: \"Petition Field\",\n\n\t\t\tleaf_numeral: 1,\n\t\t\tlegend: {\n\t\t\t\t1: \"Petition Field\",\n\t\t\t\t2: \"Petition Verification\",\n\t\t\t\t3: \"Flourish Field\",\n\t\t\t\t4: \"Flourish Verification\",\n\t\t\t\t5: \"Flourish Send\"\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\tleaves: {\n\t\t\t\tPetition_Field: {\n\t\t\t\t\t\n\t\t\t\t\t//\n\t\t\t\t\t// if empty string, then don't alert\n\t\t\t\t\talert_note: \"waiting for petition\",\n\t\t\t\t\talert_problem_1: \"\",\n\t\t\t\t\talert_problem_2: \"\",\t\t\t\t\t\n\t\t\t\t\talert_success: \"\",\n\t\t\t\t\t\n\t\t\t\t\thexadecimal_string_can_add: \"yes\",\n\t\t\t\t\thexadecimal_string_button_text: \"add\",\n\t\t\t\t\thexadecimal_string_problem: \"\"\n\t\t\t\t},\n\t\t\t\tFlourish_Field: {\n\t\t\t\t\talert_note: \"waiting for signature\",\n\t\t\t\t\talert_problem_1: \"\",\n\t\t\t\t\talert_problem_2: \"\",\n\t\t\t\t\talert_success: \"\",\n\t\t\t\t\t\n\t\t\t\t\tsign_button_text: \"Sign\",\n\t\t\t\t\tsign_button_can_sign: \"yes\",\n\t\t\t\t\t\n\t\t\t\t\tprivate_key_hexadecimal_string: \"\",\n\t\t\t\t\taddress_is_legacy: false\n\t\t\t\t}\n\t\t\t},\n\n\n\t\t\tpetition_envelope: \"\",\n\t\t\tpetition_envelope_bracket_show: \"\",\n\t\t\tpetition_envelope_hexadecimal_string: \"\",\n\t\t\tpetition_fiberized: \"\",\n\t\t\t//\n\t\t\t//\t\t\t\n\t\t\tpetition_aptos_object: \"\",\n\t\t\t//\n\t\t\t//\n\t\t\t// this is the { petition, notes }\n\t\t\tenvelope_show: \"\",\n\t\t\t//\n\t\t\t\n\t\t\tpetition_signature_fiberized: \"\",\n\t\t\tpetition_signature_hexadecimal_string: \"\",\n\t\t\tsignature_field_barrier: \"\"\n\t\t}\n\t});\n\t\n\tlet monitor = trucks [1].monitor (async ({\n\t\tpro_freight, \n\t\toriginal_freight,\n\t\t//\n\t\ttarget,\n\t\t//\n\t\tproperty, \n\t\tvalue\n\t}) => {\n\t\tconsole.log (\"monitor:\", property);\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\t/*\n\t\t\t\twait for petition modification\n\t\t\t\t\n\t\t\t*/\n\t\t\tif (target === original_freight && property === \"petition_hexadecimal_string\") {\n\t\t\t\tconsole.info (\"petition_hexadecimal_string changed\");\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tcatch (exception) {\n\t\t\tconsole.error (\"exception\", exception);\n\t\t}\n\t\t\n\t\tif (property === \"leaf_name\") {\n\t\t\t//\n\t\t\t//\n\t\t\t//\tThis modifies the \"next\" & \"back\" buttons.\n\t\t\t//\n\t\t\t//\n\t\t\t// verify_land ()\n\t\t}\n\t});\n\t\n\t/*\n\t\ttrucks [1].pro_freight\n\t*/\n\treturn trucks [1]\n}\n\nexport const play_sound = () => {\n\t\n\t\n\tconst original_freight = retrieve_truck ().original_freight;\n\t\n}\n\nexport const verify_leaf = ({ } = {}) => {\n\tconst freight = trucks [1].freight;\n\tconst leaf_name = freight.leaf_name;\n};\n\nexport const next = () => {\n\tconst freight = trucks [1].freight;\n\tconst leaf_name = freight.leaf_name;\t\n}\nexport const back = () => {\n\tconst freight = trucks [1].freight;\n\tconst leaf_name = freight.leaf_name;\n}\n\nexport const go_to = ({ leaf_page }) => {\n\treturn () => {\n\t\tconst freight = trucks [1].freight;\n\t\tconst leaf_name = freight.leaf_name;\n\t\t\n\t\tfreight.leaf_numeral = leaf_page;\n\t\tfreight.leaf_name = freight.legend [ leaf_page ]\t\n\t}\n}\n\n\n\nexport const destroy_truck = () => {\n\tdelete trucks [1];\n}\n\nexport const retrieve_truck = () => {\n\treturn trucks [1];\n}\n\n\n\nexport const monitor_truck = (action) => {\t\n\t\n\t/*\n\t\tThis\n\t*/\n\treturn trucks [1].monitor (async ({ \n\t\tpro_freight, \n\t\toriginal_freight,\n\t\t//\n\t\ttarget,\n\t\t//\n\t\tproperty, \n\t\tvalue\n\t}) => {\n\t\t// console.log (\"petition truck monitor\");\n\t\t\n\t\taction ({ pro_freight, original_freight, target, property, value });\n\t})\n}\n\n","\n\n\n\n\n\n\n\n\n<script>\n\n/*\n\t// Create\n\t\n*/\n\n/*\n\timport * as ST from '$lib/PTO/Offline/Signatory_Form/Truck/index.js'\n\timport Signatory_Truck from '$lib/PTO/Offline/Signatory_Form/Truck/Ride.svelte'\n\tlet ST_Freight = false\n\n\n\t<Signatory_Truck on_change={ ({ pro_freight }) => { ST_Freight = pro_freight; } } />\n\t{#if typeof ST_Freight === \"object\"}\n\t\n\t{/if}\n*/\n\n/*\n\thappening = \"mounted\"\n\thappening = \"modulated\"\n*/\nimport { onMount, onDestroy } from 'svelte'\nimport { monitor_truck, retrieve_truck } from './index.js'\n\nexport let on_change = () => {}\n\nlet Truck_Monitor;\nonMount (async () => {\n\tTruck_Monitor = monitor_truck (({ pro_freight }) => {\n\t\ton_change ({ \n\t\t\tpro_freight, \n\t\t\thappening: \"modulated\" \n\t\t})\n\t})\n\t\n\ton_change ({ \n\t\tpro_freight: retrieve_truck ().pro_freight, \n\t\thappening: \"mounted\" \n\t})\n});\nonDestroy (() => {\n\tTruck_Monitor.stop ()\n});\n\n\n</script>\n\n<div style=\"position: absolute\"></div>","\n\n\n\n<script>\n\n///\n//\nimport { TabGroup, Tab, TabAnchor } from '@skeletonlabs/skeleton';\nimport { ConicGradient } from '@skeletonlabs/skeleton';\nimport { Accordion, AccordionItem } from '@skeletonlabs/skeleton';\n//\nimport { onMount, onDestroy } from 'svelte';\nimport { Html5QrcodeScanner, Html5QrcodeScanType, Html5Qrcode } from \"html5-qrcode\";\n//\n//\nimport Barcode_Vision from '$lib/trinkets/Barcode/Vision/Trinket.svelte'\nimport UT_Stringified from '$lib/PTO/Transaction/Unsigned/Stringified.svelte'\n//\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\n//\n//\n// import { add_unsigned_transaction } from '../Screenplays/add_unsigned_transaction'\n//\n//\\\n\n\n\t\nlet barcode_vision = \"\"\nconst found = async (packet) => {\n\tconst { hexadecimal_string } = packet;\n\t\n\tconsole.info (\"found:\", { hexadecimal_string });\n\t\n\t/*\n\tif (freight.Unsigned_Transaction_Fields.camera.searching === \"yes\") {\n\t\tfreight.Unsigned_Transaction_Fields.camera.searching = \"no\"\n\t}\n\telse {\n\t\treturn\n\t}\n\t\n\tawait add_unsigned_transaction ({\n\t\tunsigned_transaction_hexadecimal_string: hexadecimal_string,\n\t\tfreight\n\t})\n\t\n\tfreight.Unsigned_Transaction_Fields.camera.barcode_found = \"yes\"\n\tfreight.Unsigned_Transaction_Fields.info_text = \"\"\n\tfreight.Unsigned_Transaction_Fields.alert_success = \"The barcode was scanned and the unsigned transaction object built.\"\n\t\n\t*/\n}\n\n\n\n\n\n\n</script>\n\n\n<div\n\tstyle=\"\n\t\tpadding: 0 0 1cm;\n\t\"\n>\n\t<div style=\"padding: 5px 0 10px;\">\n\t\t<header\n\t\t\tstyle=\"\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-size: 1.4em;\n\t\t\t\tpadding: .2cm 0;\n\t\t\t\"\n\t\t>QR Barcode Picture</header>\n\t\t<p\n\t\t\tstyle=\"\n\t\t\t\ttext-align: center;\n\t\t\t\"\n\t\t>A prosthetic eye can etch a <Slang text=\"petition\" /> barcode here.</p>\n\t\t<p\n\t\t\tstyle=\"\n\t\t\t\ttext-align: center;\n\t\t\t\"\n\t\t>The \"Request Camera Permissions\" button opens the barcode scan.</p>\n\t</div>\n\t\n\t<div \n\t\tclass=\"card p1\"\n\t\tstyle=\"\n\t\t\tmargin: 0.2cm auto;\n\t\t\tmax-width: 10cm;\n\t\t\twidth: 100%;\n\t\t\"\n\t>\n\t\t<Accordion>\n\t\t\t<AccordionItem>\n\t\t\t\t<svelte:fragment slot=\"summary\">\n\t\t\t\t\t<p\n\t\t\t\t\t\tstyle=\"\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t\"\n\t\t\t\t\t>Help</p>\n\t\t\t\t</svelte:fragment>\n\t\t\t\t<svelte:fragment slot=\"content\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<span>If the video does not start, perhaps one of these might start the video.</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<ol class=\"list\">\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<span class=\"badge-icon p-4 variant-soft-primary\">1</span>\n\t\t\t\t\t\t\t<span class=\"flex-auto\">refreshing the browser</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<span class=\"badge-icon p-4 variant-soft-primary\">2</span>\n\t\t\t\t\t\t\t<span class=\"flex-auto\">checking if the prosthetic eye is connected</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<span class=\"badge-icon p-4 variant-soft-primary\">3</span>\n\t\t\t\t\t\t\t<span class=\"flex-auto\">checking if the prosthetic eye is on</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ol>\n\t\t\t\t</svelte:fragment>\n\t\t\t</AccordionItem>\n\t\t</Accordion>\n\t</div>\n\t\n\n\t<Barcode_Vision\n\t\tbind:this={ barcode_vision }\n\t\tfound={ found }\n\t/>\n</div>\n","\n\n\n<script>\n\n\n////\n///\n//\nimport * as AptosSDK from \"@aptos-labs/ts-sdk\";\n//\nimport { onMount, onDestroy } from 'svelte';\n//\n//\nimport Leaf from '$lib/trinkets/Layout/Leaf/Trinket.svelte'\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\n//\nimport { string_from_Uint8Array } from '$lib/taverns/hexadecimal/string_from_Uint8Array'\nimport { Uint8Array_from_string } from '$lib/taverns/hexadecimal/Uint8Array_from_string'\nimport { UTF8_from_hexadecimal_string } from '$lib/taverns/hexadecimal/UTF8'\n//\nimport { fiberize_TP_AO } from '$lib/PTO/Offline/Petition/Fiberize'\nimport { unpack_petition_envelope } from \"$lib/PTO/Offline/Petition/Envelope\"\n//\n//\n//\n//\\\n//\\\\\n\n\nimport * as ST from '../../Truck/index.js'\nimport Signatory_Truck from '../../Truck/Ride.svelte'\nlet ST_Freight = false\n\n\nconst refresh = async () => {\t\t\n\tconst production_freight = {\n\t\talert_note: \"waiting for petition\",\n\t\talert_problem_1: \"\",\n\t\talert_problem_2: \"\",\n\t\talert_success: \"\",\n\t\t\n\t\thexadecimal_string_can_add: \"yes\",\n\t\thexadecimal_string_button_text: \"add\",\n\t\thexadecimal_string_problem: \"\"\n\t}\n\t\n\tfor (let key in production_freight) {\t\t\n\t\tST_Freight.leaves.Petition_Field [ key ] = production_freight [ key ];\n\t}\n\t\n\t// add_petition_hexadecimal_string ();\n}\n\nconst add_petition_hexadecimal_string = async () => {\n\tconsole.log (\"add_petition_hexadecimal_string\");\n\t\n\ttry {\n\t\tST_Freight.leaves.Petition_Field.hexadecimal_string_problem = \"\"\n\t\tST_Freight.leaves.Petition_Field.hexadecimal_string_problem_verbose = \"\"\n\t\t\n\n\t\tconst { petition_aptos_object, envelope_show, petition_hexadecimal_string } = unpack_petition_envelope ({\n\t\t\tTPE: ST_Freight.petition_envelope_hexadecimal_string\n\t\t});\n\t\tST_Freight.envelope_show = envelope_show;\n\t\tST_Freight.petition_aptos_object = petition_aptos_object;\n\t\t\n\t\tST_Freight.petition_hexadecimal_string = petition_hexadecimal_string;\n\t\tST_Freight.leaves.Petition_Field.hexadecimal_string_button_text = \"Added\"\n\t\tST_Freight.leaves.Petition_Field.hexadecimal_string_can_add = \"no\"\n\t\t\n\t\tST_Freight.leaves.Petition_Field.alert_success = \"The petition was added.\"\t\t\n\t\tST_Freight.leaves.Petition_Field.alert_note = \"\"\t\n\t\tST_Freight.leaves.Petition_Field.alert_problem_1 = \"\"\t\n\t\tST_Freight.leaves.Petition_Field.alert_problem_2 = \"\"\t\n\t\t\n\t\t/*\n\t\tconsole.log (\"truck:\", ST.retrieve_truck ())\n\t\tconst original_freight = ST.retrieve_truck ().original_freight;\n\t\toriginal_freight.sound_gem.playa ();\n\t\t*/\n\t\t\n\t\tST_Freight.sound_gem.playa ();\n\t}\n\tcatch (anomaly) {\n\t\tconsole.error (anomaly);\n\t\t\n\t\tST_Freight.leaves.Petition_Field.hexadecimal_string_problem = \"That hexadecimal string could not be converted into an transaction petition bracket.\";\t\n\t\tST_Freight.leaves.Petition_Field.hexadecimal_string_problem_verbose = anomaly.message\t\n\t\t\n\t\tST_Freight.leaves.Petition_Field.hexadecimal_string_button_text = \"Add\"\n\t\tST_Freight.leaves.Petition_Field.hexadecimal_string_can_add = \"yes\"\t\n\t\t\n\t\tST_Freight.leaves.Petition_Field.alert_success = \"\"\t\t\n\t\tST_Freight.leaves.Petition_Field.alert_note = \"\"\t\n\t\tST_Freight.leaves.Petition_Field.alert_problem_1 = \"That hexadecimal string could not be converted into an transaction petition bracket.\";\t\n\t\tST_Freight.leaves.Petition_Field.alert_problem_2 = anomaly.message\n\t}\n}\n\n\n</script>\n\n<Leaf>\n\t<Signatory_Truck on_change={ ({ pro_freight }) => { ST_Freight = pro_freight; } } />\n\t\n\t{#if typeof ST_Freight === \"object\"}\n\t<div monitor=\"hexadecimal string panel\"\n\t\tclass=\"p-4\"\n\t>\n\t\t<div>\n\t\t\t<div style=\"padding: 5px 0 10px;\">\n\t\t\t\t<header\n\t\t\t\t\tstyle=\"\n\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\tfont-size: 1.4em;\n\t\t\t\t\t\tpadding: .2cm 0;\n\t\t\t\t\t\"\n\t\t\t\t>Hexadecimal String</header>\n\t\t\t\t<p\n\t\t\t\t\tstyle=\"\n\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\"\n\t\t\t\t>The hexadecimal string of the <Slang text=\"petition\" /> can be pasted here.</p>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<label class=\"label\">\n\t\t\t<textarea \n\t\t\t\tmonitor=\"hexadecimal string field\"\n\t\t\t\n\t\t\t\tbind:value={ ST_Freight.petition_envelope_hexadecimal_string }\n\t\t\t\ton:keyup={ refresh }\n\t\t\t\t\n\t\t\t\trows=\"8\" \n\t\t\t\tplaceholder=\"\" \n\t\t\t\t\n\t\t\t\tstyle=\"padding: 10px\"\n\t\t\t\tclass=\"textarea\" \n\t\t\t/>\n\t\t</label>\n\t\t\n\t\t\n\t\t<div style=\"text-align: right; margin-top: 10px;\">\n\t\t\t<button \n\t\t\t\tmonitor=\"add hexadecimal string\"\n\n\t\t\t\ttype=\"button\" \n\n\t\t\t\tdisabled={ ST_Freight.leaves.Petition_Field.hexadecimal_string_can_add != \"yes\" }\n\t\t\t\ton:click={ add_petition_hexadecimal_string }\n\t\t\t\t\n\t\t\t\tstyle=\"padding: 10px 60px\"\n\t\t\t\tclass=\"btn variant-filled\"\n\t\t\t>{ ST_Freight.leaves.Petition_Field.hexadecimal_string_button_text }</button>\n\t\t</div>\n\t\t\n\t\t<div style=\"height: 5cm\" />\t\t\n\t</div>\n\t{/if}\n</Leaf>\n\n\n","\n<script>\n\nimport { RadioGroup, RadioItem } from '@skeletonlabs/skeleton';\n\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\nimport Alert_Success from '$lib/trinkets/Alerts/Success.svelte'\nimport Alert_Problem from '$lib/trinkets/Alerts/Problem.svelte'\nimport Alert_Note from '$lib/trinkets/Alerts/Note.svelte'\n\nimport Barcode_Eye from './Trinkets/Barcode_Eye.svelte'\nimport Hexadecimal_String_Field from './Trinkets/Hexadecimal_String_Field.svelte'\n\nimport Signatory_Truck from '$lib/PTO/Offline/Signatory_Form/Truck/Ride.svelte'\nlet ST_Freight = false\n\n\n\n\nlet leaf_elected = \"Barcode\"\n\n</script>\n\n<div class=\"p-1\">\n\t<Signatory_Truck on_change={ ({ pro_freight }) => { ST_Freight = pro_freight; } } />\n\t{#if typeof ST_Freight === \"object\"}\n\n\t<div\n\t\tstyle=\"\n\t\t\tmax-width: 90%;\n\t\t\tmargin: 0 auto;\n\t\t\tpadding: 0.25cm 0;\n\t\t\t\n\t\t\ttext-align: center;\n\t\t\"\n\t>\n\t\t{#if ST_Freight.leaves.Petition_Field.alert_note.length >= 1 }\n\t\t<Alert_Note\n\t\t\ttext={ ST_Freight.leaves.Petition_Field.alert_note }\n\t\t\tprogress={{\n\t\t\t\tshow: \"yes\"\n\t\t\t}}\n\t\t/>\n\t\t{/if}\n\t\t\n\t\t{#if ST_Freight.leaves.Petition_Field.alert_problem_1.length >= 1 }\n\t\t<Alert_Problem\n\t\t\ttext={ ST_Freight.leaves.Petition_Field.alert_problem_1 }\n\t\t\ttext_2={ ST_Freight.leaves.Petition_Field.alert_problem_2 }\n\t\t\tprogress={{\n\t\t\t\tshow: \"yes\"\n\t\t\t}}\n\t\t/>\n\t\t{/if}\n\t\t\n\t\t{#if ST_Freight.leaves.Petition_Field.alert_success.length >= 1 }\n\t\t<Alert_Success\n\t\t\ttext={ ST_Freight.leaves.Petition_Field.alert_success }\n\t\t/>\n\t\t{/if}\n\t</div>\n\n\t<div\n\t\tstyle=\"\n\t\t\tmax-width: 400px;\n\t\t\tmargin: 0 auto;\n\t\t\tpadding: 0.25cm 0;\n\t\t\t\n\t\t\ttext-align: center;\n\t\t\"\n\t>\n\t\t<RadioGroup \n\t\t\trounded=\"rounded-container-token\" \n\t\t\t_flexDirection=\"flex-col\"\n\t\t>\t\t\t\t\n\t\t\t<RadioItem \n\t\t\t\tbind:group={ leaf_elected } \n\t\t\t\tname=\"justify\" \n\t\t\t\tvalue=\"Barcode\"\n\t\t\t>\n\t\t\t\t<span monitor=\"show barcode\">Barcode</span>\n\t\t\t</RadioItem>\n\t\t\t<RadioItem \n\t\t\t\tbind:group={ leaf_elected } \n\t\t\t\tname=\"justify\" \n\t\t\t\tvalue=\"Hexadecimal\"\n\t\t\t>\n\t\t\t\t<span monitor=\"show hexadecimal\">Hexadecimal</span>\n\t\t\t</RadioItem>\n\t\t</RadioGroup>\n\t</div>\n\n\t\n\n\t<div class=\"card p-2\">\n\t\t{#if leaf_elected === \"Barcode\" }\n\t\t<Barcode_Eye />\n\t\t{:else}\n\t\t<Hexadecimal_String_Field />\n\t\t{/if}\n\t</div>\n\t\n\t{/if}\n</div>\n\n\n","\n<script>\n\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\n\nimport Petition2_Bracket from '$lib/PTO/Offline/Petition/Bracket/Gem.svelte'\nimport Petition2_Bracket_Details from '$lib/PTO/Offline/Petition/Bracket/Details.svelte'\n\t\t\nimport Signatory_Truck from '$lib/PTO/Offline/Signatory_Form/Truck/Ride.svelte'\nlet ST_Freight = false\n\n\n\n\n</script>\n\n<div\n\tstyle=\"\n\t\tdisplay: flex;\n\t\tgap: 0.25cm;\n\t\t\n\t\tflex-direction: column;\n\t\t\n\t\tpadding: 0.25cm 0.25cm 5cm; \n\t\"\n>\n\t<Signatory_Truck on_change={ ({ pro_freight }) => { ST_Freight = pro_freight; } } />\n\t\t\n\t{#if typeof ST_Freight === \"object\"}\n\t<Petition2_Bracket_Details />\n\t<Petition2_Bracket \n\t\tpetition_AO_fiberized={ ST_Freight.envelope_show }\n\t/>\n\t{/if}\n</div>\n\n\n","\n\n\n\n\n\n\n\n/* \n\timport { sign_petition } from '$lib/PTO/Offline/Signatory/sign'\n\tconst {\n\t\tpetition_signature_aptos_object,\n\t\tpetition_signature_fiberized,\n\t\tpetition_signature_hexadecimal_string\n\t} = await sign ({\n\t\tpetition_aptos_object,\n\t\tprivate_key_hexadecimal_string,\n\t\taddress_is_legacy: false\n\t});\n*/\n\n\n////\n///\nimport * as AptosSDK from \"@aptos-labs/ts-sdk\";\n//\nimport { string_from_Uint8Array } from '$lib/taverns/hexadecimal/string_from_Uint8Array'\nimport { Uint8Array_from_string } from '$lib/taverns/hexadecimal/Uint8Array_from_string'\n//\nimport { fiberize_signature } from '$lib/PTO/Offline/Signatory/fiberize'\n//\n//\n//\\\n//\\\\\n\n\t\n\n////\n//\n//\thttps://github.com/aptos-labs/aptos-ts-sdk/blob/main/examples/typescript-esm/sponsored_transactions/server_signs_and_submit.ts\n//\n//\nexport const sign_petition = async ({\n\tpetition_hexadecimal_string,\n\tprivate_key_hexadecimal_string,\n\t\n\t// boolean\n\taddress_is_legacy\n}) => {\n\tconst aptos = new AptosSDK.Aptos (new AptosSDK.AptosConfig ({}));\n\tconsole.info ({ aptos })\n\t\n\n\t///\n\t//\tperhaps: this makes the account object from the private key hexadecimal\n\t//\n\t//\n\tconst signer = AptosSDK.Account.fromPrivateKey ({ \n\t\tprivateKey: new AptosSDK.Ed25519PrivateKey (\n\t\t\tUint8Array_from_string (private_key_hexadecimal_string)\n\t\t), \n\t\tlegacy: address_is_legacy\n\t});\n\t//\\\n\n\tconst petition_aptos_object = AptosSDK.SimpleTransaction.deserialize (\n\t\tnew AptosSDK.Deserializer (\n\t\t\tUint8Array_from_string (petition_hexadecimal_string)\n\t\t)\n\t);\n\t\n\t\n\t///\n\t//\n\tconst petition_signature_aptos_object = aptos.transaction.sign ({ \n\t\tsigner,\n\t\ttransaction: petition_aptos_object\n\t});\n\tconst petition_signature_bytes = petition_signature_aptos_object.bcsToBytes ();\n\tconst petition_signature_hexadecimal_string = string_from_Uint8Array (petition_signature_bytes)\n\n\t\n\t///\n\t//\n\t//\tReversal Check\n\t//\n\tconst deserialized_petition_signature_bytes = AptosSDK.AccountAuthenticator.deserialize (\n\t\tnew AptosSDK.Deserializer (\n\t\t\tUint8Array_from_string (petition_signature_hexadecimal_string)\n\t\t)\n\t).bcsToBytes ();\n\tif (petition_signature_hexadecimal_string != string_from_Uint8Array (deserialized_petition_signature_bytes)) {\n\t\tthrow new Error (`\n\t\t\tpetition_signature_hexadecimal_string !=  deserialized_petition_signature_bytes\n\t\t\t\n\t\t\tpetition_signature_hexadecimal_string is: ${ petition_signature_hexadecimal_string }\n\t\t\t\n\t\t\tdeserialized_petition_signature_bytes is: ${ deserialized_petition_signature_bytes } \n\t\t`)\t\t\n\t}\n\t//\n\t//\\\n\n\tconst petition_signature_fiberized = fiberize_signature (petition_signature_aptos_object)\n\t\n\treturn {\n\t\tpetition_signature_aptos_object,\n\t\tpetition_signature_hexadecimal_string,\n\t\tpetition_signature_fiberized\n\t}\n}","\n<script>\n\nimport { SlideToggle } from '@skeletonlabs/skeleton';\n\nimport Alert_Success from '$lib/trinkets/Alerts/Success.svelte'\nimport Alert_Problem from '$lib/trinkets/Alerts/Problem.svelte'\nimport Alert_Note from '$lib/trinkets/Alerts/Note.svelte'\n\nimport Signatory_Truck from '$lib/PTO/Offline/Signatory_Form/Truck/Ride.svelte'\nlet ST_Freight = false\n\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\nimport { sign_petition } from '$lib/PTO/Offline/Signatory/sign'\n\n\n\n\t\n\nconst refresh = async () => {\n\tST_Freight.leaves.Flourish_Field.alert_note = \"waiting for signature\";\n\tST_Freight.leaves.Flourish_Field.alert_problem_1 = \"\"\n\tST_Freight.leaves.Flourish_Field.alert_problem_2 = \"\"\t\n\tST_Freight.leaves.Flourish_Field.alert_success = \"\"\n\t\n\tST_Freight.leaves.Flourish_Field.sign_button_text = \"Sign\"\n\tST_Freight.leaves.Flourish_Field.sign_button_can_sign = \"yes\"\n}\n\nconst sign_the_petition = async () => {\n\tconsole.info (\"sign_the_petition\", {\n\t\tpetition_aptos_object: ST_Freight.petition_aptos_object\n\t});\n\t\n\ttry {\n\t\tconst {\n\t\t\tpetition_signature_aptos_object,\n\t\t\tpetition_signature_fiberized,\n\t\t\tpetition_signature_hexadecimal_string\n\t\t} = await sign_petition ({\n\t\t\tpetition_aptos_object: ST_Freight.petition_aptos_object,\n\t\t\tpetition_hexadecimal_string: ST_Freight.petition_hexadecimal_string,\n\t\t\tprivate_key_hexadecimal_string: ST_Freight.leaves.Flourish_Field.private_key_hexadecimal_string,\n\t\t\taddress_is_legacy: ST_Freight.leaves.Flourish_Field.address_is_legacy\n\t\t});\n\n\n\t\tST_Freight.petition_signature_fiberized = petition_signature_fiberized;\n\t\tST_Freight.petition_signature_aptos_object = petition_signature_aptos_object;\n\t\tST_Freight.petition_signature_hexadecimal_string = petition_signature_hexadecimal_string;\n\t\t\n\t\tST_Freight.leaves.Flourish_Field.sign_button_can_sign = \"no\"\n\t\t\n\t\tST_Freight.leaves.Flourish_Field.alert_success = \"The signature has been created successfully.\"\t\t\n\t\tST_Freight.leaves.Flourish_Field.alert_note = \"\"\t\n\t\tST_Freight.leaves.Flourish_Field.alert_problem_1 = \"\"\n\t\tST_Freight.leaves.Flourish_Field.alert_problem_2 = \"\"\n\t}\n\tcatch (anomaly) {\n\t\tconsole.error (anomaly);\n\t\t\n\t\tST_Freight.leaves.Flourish_Field.alert_success = \"\"\t\t\n\t\tST_Freight.leaves.Flourish_Field.alert_note = \"\"\t\n\t\tST_Freight.leaves.Flourish_Field.alert_problem_1 = anomaly.message\n\t\tST_Freight.leaves.Flourish_Field.alert_problem_2 = \"\"\n\t}\n}\n\n\t\n\n</script>\n\n<div\n\tstyle=\"\n\t\ttext-align: center;\n\t\tpadding: 0.25cm;\n\t\"\n>\n\t<Signatory_Truck on_change={ ({ pro_freight }) => { ST_Freight = pro_freight; } } />\n\n\t\n\t{#if typeof ST_Freight === \"object\"}\n\t<div\n\t\tstyle=\"\n\t\t\tmax-width: 90%;\n\t\t\tmargin: 0 auto;\n\t\t\tpadding: 0.25cm 0;\n\t\t\t\n\t\t\ttext-align: center;\n\t\t\"\n\t>\n\t\t{#if ST_Freight.leaves.Flourish_Field.alert_note.length >= 1 }\n\t\t<Alert_Note\n\t\t\ttext={ ST_Freight.leaves.Flourish_Field.alert_note }\n\t\t\tprogress={{\n\t\t\t\tshow: \"yes\"\n\t\t\t}}\n\t\t/>\n\t\t{/if}\n\t\t\n\t\t{#if ST_Freight.leaves.Flourish_Field.alert_problem_1.length >= 1 }\n\t\t<Alert_Problem\n\t\t\ttext={ ST_Freight.leaves.Flourish_Field.alert_problem_1 }\n\t\t\ttext_2={ ST_Freight.leaves.Flourish_Field.alert_problem_2 }\n\t\t\tprogress={{\n\t\t\t\tshow: \"yes\"\n\t\t\t}}\n\t\t/>\n\t\t{/if}\n\t\t\n\t\t{#if ST_Freight.leaves.Flourish_Field.alert_success.length >= 1 }\n\t\t<Alert_Success\n\t\t\ttext={ ST_Freight.leaves.Flourish_Field.alert_success }\n\t\t/>\n\t\t{/if}\n\t</div>\n\t\n\t<header\n\t\tstyle=\"\n\t\t\ttext-align: center;\n\t\t\tfont-size: 2em;\n\t\t\tpadding: 1cm 0;\n\t\t\"\n\t><Slang text=\"Signature\" /> Field</header>\n\t<p>The \"Sign\" button creates a <Slang text=\"signature\" /> from the <Slang text=\"petition\" /> with the <Slang text=\"private key\" />.</p>\n\t\n\t<div style=\"height: 0.2cm\"></div>\n\t\n\t<div \n\t\tstyle=\"\n\t\t\ttext-align: center;\n\t\t\"\n\t\tclass=\"card p-4\"\n\t>\n\t\t<span style=\"font-size: 1.5em;\"><Slang text=\"Private Key\" /></span>\n\t\t<div style=\"height: 0.1cm\"></div>\n\t\t<input \n\t\t\tmonitor=\"private key\"\n\t\t\n\t\t\tbind:value={ ST_Freight.leaves.Flourish_Field.private_key_hexadecimal_string }\n\t\t\ton:keyup={ refresh }\n\t\t\t\n\t\t\tclass=\"textarea\"\n\t\t\tstyle=\"min-height: 50px; padding: 10px\"\n\t\t\t\n\t\t\ttype=\"password\" \n\t\t\tplaceholder=\"\"\n\t\t/>\n\t</div>\n\n\t<div style=\"height: 0.25cm\"></div>\n\n\n\t<div class=\"card p-4\">\n\t\t<span style=\"font-size: 1.5em;\"><Slang text=\"Address\" /> is Legacy</span>\n\t\t<div\n\t\t\tstyle=\"\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: center;\n\t\t\t\talign-items: center;\n\t\t\t\tpadding-top: 0.2cm;\n\t\t\t\"\n\t\t>\n\t\t\t<span\n\t\t\t\tstyle=\"\n\t\t\t\t\tpadding: 0 10px;\n\t\t\t\t\"\n\t\t\t>No</span>\n\t\t\t<div\n\t\t\t\tmonitor=\"address is legacy lot\"\n\t\t\t\tstyle=\"inline-flex\"\n\t\t\t>\n\t\t\t\t<SlideToggle \n\t\t\t\t\tname=\"slide\" \n\t\t\t\t\tbind:checked={ ST_Freight.leaves.Flourish_Field.address_is_legacy } \n\t\t\t\t\ton:change={ refresh }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<span\n\t\t\t\tstyle=\"\n\t\t\t\t\tpadding: 0 10px;\n\t\t\t\t\"\n\t\t\t>Yes</span>\n\t\t</div>\n\t</div>\n\n\t<div style=\"height: 0.5cm\"></div>\n\n\t<div\n\t\tstyle=\"text-align: right; display: inline-block;\"\n\t>\n\t\t<button \n\t\t\tmonitor=\"sign\"\n\t\t\n\t\t\ton:click={ sign_the_petition }\n\t\t\tdisabled={ ST_Freight.leaves.Flourish_Field.sign_button_can_sign != \"yes\" }\n\n\t\t\ttype=\"button\"\n\t\t\t\n\t\t\tstyle=\"padding-right: 64px; padding-left: 64px;\"\n\t\t\tclass=\"btn variant-filled\"\n\t\t\t\n\t\t>{ ST_Freight.leaves.Flourish_Field.sign_button_text }</button>\n\t</div>\n\t\n\t<div style=\"height: 5cm\"></div>\n\t\n\t{/if}\n</div>","\n<script>\n\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\nimport Code_Wall from '$lib/trinkets/Code_Wall/Trinket.svelte' \n\nimport Signatory_Truck from '$lib/PTO/Offline/Signatory_Form/Truck/Ride.svelte'\nlet ST_Freight = false\n\n\t\n\n</script>\n\n<div>\n\t<Signatory_Truck on_change={ ({ pro_freight }) => { ST_Freight = pro_freight; } } />\n\t{#if typeof ST_Freight === \"object\"}\n\t<div\n\t\tstyle=\"\n\t\t\ttext-align: center;\n\t\t\tpadding: 0.25cm 0;\n\t\t\"\n\t>\n\t\t<header\n\t\t\tstyle=\"\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-size: 2em;\n\t\t\t\tpadding: .2cm 0;\n\t\t\t\"\n\t\t><Slang text=\"Signature\" /> Verfication</header>\n\t\t<p>This is the <Slang text=\"signature\" /> as a bracket.</p>\n\t</div>\n\t\n\t<div monitor=\"signature bracket panel\">\n\t\t<Code_Wall\n\t\t\ttext={ ST_Freight.petition_signature_fiberized }\n\t\t\tcan_clone={ \"no\" }\n\t\t/>\n\t</div>\n\t\t\n\t{/if}\n</div>","\n<script>\n\nimport { RadioGroup, RadioItem } from '@skeletonlabs/skeleton';\n\nimport Slang from '$lib/trinkets/Slang/Trinket.svelte'\nimport Barcode_Visual_2 from '$lib/trinkets/Barcode/Visual_2/Trinket.svelte'\nimport Code_Wall from '$lib/trinkets/Code_Wall/Trinket.svelte' \n\nimport Signatory_Truck from '$lib/PTO/Offline/Signatory_Form/Truck/Ride.svelte'\nlet ST_Freight = false\n\n\t\nlet leaf_elected = \"Barcode\"\n\n</script>\n\n<div>\n\t<Signatory_Truck on_change={ ({ pro_freight }) => { ST_Freight = pro_freight; } } />\n\t{#if typeof ST_Freight === \"object\"}\n\t<div\n\t\tstyle=\"\n\t\t\ttext-align: center;\n\t\t\tpadding: 0cm 0 .3cm;\n\t\t\"\n\t>\n\t\t<p>\n\t\t\t<span>This <Slang text=\"signature\" /> can be sent to the publicist.</span>\t\t\t\n\t\t</p>\n\t</div>\n\t\n\t\n\t<div\n\t\tstyle=\"\n\t\t\tmax-width: 400px;\n\t\t\tmargin: 0 auto;\n\t\t\tpadding: 0.25cm 0;\n\t\t\t\n\t\t\ttext-align: center;\n\t\t\"\n\t>\n\t\t<RadioGroup \n\t\t\trounded=\"rounded-container-token\" \n\t\t\t_flexDirection=\"flex-col\"\n\t\t>\t\t\t\t\n\t\t\t<RadioItem \n\t\t\t\tbind:group={ leaf_elected } \n\t\t\t\tname=\"justify\" \n\t\t\t\tvalue=\"Barcode\"\n\t\t\t>\n\t\t\t\t<span monitor=\"show barcode\">Barcode</span>\n\t\t\t</RadioItem>\n\t\t\t<RadioItem \n\t\t\t\tbind:group={ leaf_elected } \n\t\t\t\tname=\"justify\" \n\t\t\t\tvalue=\"Hexadecimal\"\n\t\t\t>\n\t\t\t\t<span monitor=\"show hexadecimal\">Hexadecimal</span>\n\t\t\t</RadioItem>\n\t\t</RadioGroup>\n\t</div>\n\t\n\t<div class=\"card p-2\">\n\t\t{#if leaf_elected === \"Barcode\" }\n\t\t<p\n\t\t\tstyle=\"\n\t\t\t\tpadding: 0.5cm 0cm;\n\t\t\t\ttext-align: center;\n\t\t\t\"\n\t\t>\n\t\t\t<span>This <b>Barcode</b> can be scanned and signed by an <Slang text=\"Offline_Machine\" />.</span> \n\t\t</p>\n\t\t<Barcode_Visual_2\n\t\t\thexadecimal_string={ ST_Freight.petition_signature_hexadecimal_string }\n\t\t/>\n\t\t{:else}\n\t\t<div monitor=\"hexadecimal\">\n\t\t\t<Code_Wall \n\t\t\t\tcan_clone={ \"yes\" }\n\t\t\t\ttext={ ST_Freight.petition_signature_hexadecimal_string } \n\t\t\t/>\n\t\t</div>\n\t\t{/if}\n\t</div>\n\t\n\t<div style=\"height: 5cm\"></div>\n\t\n\t{/if}\n</div>","\n\n<script>\n\n/*\n\tTODO:\n\t\n\t\timport Offline_Petition from '$lib/PTO/Offline/Petition_Form/Trinket.svelte'\n\t\t<Offline_Petition \n\t\t\tbegin_at_bracket=\"yes\"\n\t\t/>\n\t\t\n\t\t// somehow call function in Component\n\t\tOP.use_fields ({\n\t\t\t\n\t\t})\n*/\n\n\n////\n//\nimport { onMount, onDestroy } from 'svelte';\nimport { Paginator } from '@skeletonlabs/skeleton';\nimport { Accordion, AccordionItem } from '@skeletonlabs/skeleton';\nimport { RadioGroup, RadioItem } from '@skeletonlabs/skeleton';\t\n//\n//\nimport Leaf from '$lib/trinkets/Layout/Leaf/Trinket.svelte'\nimport Versies_Truck from '$lib/Versies/Trucks.svelte'\n//\n//\n////\n\nimport Signatory_Truck from './Truck/Ride.svelte'\nimport * as ST from './Truck/index.js'\n\n\nimport Petition_Field from './1_Petition_Field/Trinket.svelte'\nimport Petition_Verification from './2_Petition_Verification/Gem.svelte'\nimport Flourish_Field from './3_Flourish_Field/Gem.svelte'\nimport Flourish_Verification from './4_Flourish_Verification/Gem.svelte'\nimport Flourish_Code from './5_Flourish_Code/Gem.svelte'\n\n\nimport Sound_Gem from '$lib/trinkets/Sound/Gem.svelte'\n\nlet sound_gem = \"\"\n\nlet ST_Freight = false;\n$: { let _ST_Freight = ST_Freight; }\n\nlet Versies_Freight = false;\n$: { let _Versies_Freight = Versies_Freight; }\n\t\nlet build_petition = () => {}\n\nlet le_buttons = [ 1,2,3,4,5 ]\n\nlet ST_prepared = \"no\"\nonMount (async () => {\t\n\tconst ST_Freight = ST.make_truck ().pro_freight;\t\n\tST_prepared = \"yes\"\n});\nonDestroy (() => {\n\tST.destroy_truck ()\n});\n\n</script>\n\n{#if ST_prepared === \"yes\" }\n<div \n\tstyle=\"\n\t\tposition: relative;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\"\n\tclass=\"card\"\n>\n\t<Versies_Truck on_change={ ({ freight }) => { Versies_Freight = freight } } />\n\t<Signatory_Truck on_change={ ({ pro_freight }) => { ST_Freight = pro_freight; } } />\n\n\t{#if typeof ST_Freight === \"object\" && typeof Versies_Freight === \"object\"}\n\t<Sound_Gem \n\t\tbind:this={ ST_Freight.sound_gem }\n\t\tsource=\"/sonors/Beep/Beep.ogg\"\n\t/>\n\n\t<div\n\t\tstyle=\"\n\t\t\tposition: absolute;\n\t\t\theight: 30px;\n\t\t\twidth: 100%;\n\t\t\t\n\t\t\tbox-sizing: border-box;\n\t\t\t\n\t\t\tborder-bottom: 2px solid black;\n\t\t\tborder-bottom-left-radius: 0;\n\t\t\tborder-bottom-right-radius: 0;\n\t\n\t\t\tborder-top-left-radius: 8x;\n\t\t\tborder-top-right-radius: 8px;\t\n\t\t\"\n\t>\n\t\t<header\n\t\t\tstyle=\"\n\t\t\t\tposition: relative;\n\t\t\t\t\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: center;\n\t\t\t\talign-items: center;\n\t\t\t\t\n\t\t\t\theight: 100%;\n\t\t\t\twidth: 100%;\n\t\t\t\"\n\t\t>\n\t\t\t{ ST_Freight.leaf_name }\n\t\t</header>\n\t</div>\n\t\n\t\n\t<div\n\t\tstyle=\"\n\t\t\tposition: absolute;\n\t\t\ttop: 30px;\n\t\t\theight: calc(100% - 80px);\n\t\t\twidth: 100%;\n\t\t\toverflow-y: scroll;\n\t\t\"\n\t>\n\t\t<div\n\t\t\tstyle=\"\n\t\t\t\tborder-bottom: 2px solid black;\n\t\t\t\tborder-bottom-left-radius: 0;\n\t\t\t\tborder-bottom-right-radius: 0;\n\t\t\n\t\t\t\tborder-top-left-radius: 8x;\n\t\t\t\tborder-top-right-radius: 8px;\n\t\t\t\"\n\t\t>\n\t\t\t<Accordion>\n\t\t\t\t<AccordionItem>\n\t\t\t\t\t<svelte:fragment slot=\"summary\">signatory freight</svelte:fragment>\n\t\t\t\t\t<svelte:fragment slot=\"content\">\n\t\t\t\t\t\t<pre>{ ST_Freight.signature_field_barrier }</pre>\n\t\t\t\t\t\t<pre>{ JSON.stringify (ST_Freight, null, 2) }</pre>\n\t\t\t\t\t</svelte:fragment>\n\t\t\t\t</AccordionItem>\n\t\t\t</Accordion>\n\t\t</div>\n\n\t\t<div\n\t\t\tstyle=\"padding: 1cm\"\n\t\t>\n\t\t\t{#if ST_Freight.leaf_name === \"Petition Field\" }\n\t\t\t<Petition_Field />\n\t\t\t{:else if ST_Freight.leaf_name === \"Petition Verification\" }\n\t\t\t<Petition_Verification />\n\t\t\t{:else if ST_Freight.leaf_name === \"Flourish Field\" }\n\t\t\t<Flourish_Field />\n\t\t\t{:else if ST_Freight.leaf_name === \"Flourish Verification\" }\n\t\t\t<Flourish_Verification />\n\t\t\t{:else if ST_Freight.leaf_name === \"Flourish Send\" }\n\t\t\t<Flourish_Code />\n\t\t\t{/if}\n\t\t</div>\n\t</div>\n\t\n\t<div\n\t\tstyle=\"\n\t\t\tposition: absolute;\n\t\t\tbottom: 0;\n\t\t\tleft: 0;\n\t\t\t\n\t\t\twidth: 100%;\n\t\t\theight: 50px;\n\t\t\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\tgap: 0.25cm;\n\t\t\t\n\t\t\tpadding: 0.2cm;\n\t\t\t\n\t\t\tborder-top: 2px solid black;\n\t\t\tborder-top-left-radius: 0;\n\t\t\tborder-top-right-radius: 0;\n\t\n\t\t\tborder-bottom-left-radius: 8x;\n\t\t\tborder-bottom-right-radius: 8px;\t\t\t\n\t\t\"\n\t\tclass=\"card\"\n\t>\n\t\t<button\n\t\t\ttype=\"button\" class=\"btn variant-filled\"\n\t\t\tdisabled={ ST_Freight.back !== \"yes\" }\n\t\t\t\n\t\t\ton:click={ ST.back }\n\t\t>back</button>\n\t\t\n\t\t<div\n\t\t\tstyle=\"\n\t\t\t\tdisplay: flex;\n\t\t\t\"\n\t\t>\n\t\t\t{#each le_buttons as le_button }\n\t\t\t<button\n\t\t\t\tstyle=\"\n\t\t\t\t\tmargin: 0 2px;\n\t\t\t\t\tpadding: 0.25cm 0.5cm;\n\t\t\t\t\"\n\t\t\t\tclass={(\n\t\t\t\t\t[ \n\t\t\t\t\t\t\"chip\",\n\t\t\t\t\t\tST_Freight.leaf_numeral === le_button ? \"variant-filled\" : \"variant-soft\"\t\n\t\t\t\t\t].join (\" \")\n\t\t\t\t)}\n\t\t\t\ton:click={ \n\t\t\t\t\tST.go_to ({ leaf_page: le_button }) \n\t\t\t\t}\n\t\t\t>{ le_button }</button>\n\t\t\t{/each}\n\t\t</div>\n\t\t\t\t\n\t\t<button\n\t\t\ttype=\"button\" \n\t\t\tclass=\"btn variant-filled\"\n\t\t\tdisabled={ ST_Freight.next !== \"yes\" }\n\t\t\t\n\t\t\ton:click={ ST.next }\n\t\t>next</button>\t\t\t\n\t</div>\n\t{/if}\n</div>\n{/if}"],"names":["ctx","insert_hydration","target","div","anchor","cBase","multiple","$$props","disabled","spacing","rounded","active","hover","padding","regionLead","regionDefault","regionTrail","labelledby","setContext","$$invalidate","classesBase","input","create_if_block_2","if_block1","create_if_block_1","if_block2","create_if_block","label","append_hydration","div3","div0","div2","div1","cDisabled","cLabel","cRegionLead","cRegionDefault","cRegionTrail","areDeeplyEqual","param1","param2","keys1","keys2","key","value1","value2","group","name","value","getContext","checked","elemInput","updateCheckbox","group2","updateGroup","checked2","index","onKeyDown","event","$$value","selected","groupVal","classesActive","classesDisabled","classesRegionLead","classesRegionDefault","classesRegionTrail","classesLabel","attr","source_1","source_1_src_value","audio","source","show_gem","playa","onMount","pick_expiration","after_seconds","after_seconds_","Aptos_SDK.U64","replaces","string_from_Uint8Array","fiberize_TP_AO","bracket","hexadecimal_string_from_UTF8","UTF8_string","utf8Array","hexString","byte","UTF8_from_hexadecimal_string","hexadecimal_string","byteArray","i","pack_petition_envelope","petition_AO","petition_hexadecimal_string","notes","TPE_fiberized","unpack_petition_envelope","TPE","UTF8_String","parsed","petition","petition_aptos_object","AptosSDK.SimpleTransaction","AptosSDK.Deserializer","Uint8Array_from_string","envelope_show","build_entry_petition_AO","net_path","petition_fields","parameters","functionArguments","parameter","Aptos_SDK.AccountAddress","transaction_petition_bracket","aptos","Aptos_SDK.Aptos","Aptos_SDK.AptosConfig","Aptos_SDK.Network","TP1_AO","barrier","TP1_AO_Uint8Array","TP1_AO_hexadecimal_string","TP1_AO_fiberized","TP2_AO_Uint8Array","TP2_AO","Aptos_SDK.SimpleTransaction","Aptos_SDK.Deserializer","TP2_fiberized","TP2_hexadecimal_string","anomaly","exception","trucks","make_truck","ask_for_Versies_freight","build_truck","pro_freight","original_freight","property","next","back","go_to","leaf_page","freight","destroy_truck","retrieve_truck","monitor_truck","action","on_change","Truck_Monitor","onDestroy","ask_account_module","address_hexadecimal_string","module_name","proceeds","create_if_block_4","add_render_callback","select","option","set_data","t_value","create_if_block_3","if_block0","dirty","address_chosen","endorsed","endorsed_addresses","parse_endorsed_address","imperfection","previous_address","address","auto_complete_style_preset","auto_complete_style","on_click","on_blur","select_value","retrieve_modules_for_address","enhanced","endorsed_modules","parse_endorsed_modules","modules_of_address","module_names","module_name_choosen","les_modules","address_changed","_les_modules","a","b","le_module","mod_name","retrieve_fonctions_for_module","les_fonctions","priority","obj","priorityA","priorityB","button","button_class_value","span","t1","t1_value","div6","div4","div5","t2_value","t2","each_blocks","fonction_choose_accordion_open","le_fonction_index","le_move_explorer_address","le_fonction_chosen","fonction_mode","fonction_choosen","endorsed_fonctions","parse_endorsed_fonctions","fonctions_of_module","show_fonctions","_les_fonctions","le_fonction","fonction_changed","mode_explorer","fonction_modes_shown","fonction_modes_shown_toggle","flavor","$$self","f","previous_address_hexadecimal_string","effective","address_of_flourisher_chosen","address_trinket","on_prepare","header_size","textarea","p","fonction_parameters","fonction_parameters_changed","contents","set_input_value","is_function","fonction_type_parameters","fonction_type_parameters_changed","retrieve_fonction_parameters","fonction_selected","_get","retrieve_fonction_type_parameters","generic_type_param","t0_value","elector_address_changes","elector_module_name_changes","elector_fonction_changes","func_2","if_block","PT_Freight","Versies_Freight","le_move","fonction_search","fonction_spot","fonction_module_name","fonction_found","fonction_signer_hexadecimal_address","build_petition","fonction","_fonction_mode","address_of_flourisher","header","petition_AO_fiberized","div8","p0","b0","b1","hr0","header0","p1","p2","hr1","hr2","div7","header2","p6","span0","br","span1","b6","code_wall_changes","make_with_zxing","barcode_element","packed_hexadecimal_string","size","BrowserQRCodeSvgWriter","make_barcode","pack_string","unpacked_hexadecimal_string","unpack_string","equal","pre","code","u_int_8_array","prepared","make_queue","make","the_hexadecimal_string","loop_1","loop","entry","barcode_visual_2_changes","selected_option","scanned","barcode_vision","on_barcode_found","fiberize_signature","button_disabled_value","current","button_text","add_Signature_hexadecimal_string","signature_Aptos_object","AptosSDK.AccountAuthenticator","create_if_block_5","hr","alert_note_changes","alert_problem_changes","alert_success_changes","elected_leaf","show","asked","div9","div10","div11","hexadecimal_petition_to_Aptos_Object","hexadecimal_Signature_to_Aptos_Object","signature_hexadecimal_string","petition_Aptos_Object","signature_Aptos_Object","AptosSDK.Aptos","AptosSDK.AptosConfig","AptosSDK.Network","adaptation","transaction_fiberized","find_transaction_by_hash","each_value","ensure_array_like","button0","button1","dispose","listen","PT.back","PT.next","pre0","pre1","t0","PT.go_to","use_fully_elected_petition_fields","fully_elected_petition_fields","built","PT_prepared","PT.make_truck","PT.destroy_truck","ol","found","packet","t6_value","t6","ST_Freight","refresh","production_freight","add_petition_hexadecimal_string","leaf_elected","petition2_bracket_changes","sign_petition","private_key_hexadecimal_string","address_is_legacy","signer","AptosSDK.Account","AptosSDK.Ed25519PrivateKey","petition_signature_aptos_object","petition_signature_bytes","petition_signature_hexadecimal_string","deserialized_petition_signature_bytes","petition_signature_fiberized","t23_value","slidetoggle_props","span2","span3","slidetoggle_changes","t23","sign_the_petition","ST.back","ST.next","ST.go_to","le_buttons","ST_prepared","ST.make_truck","ST.destroy_truck"],"mappings":"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","x_google_ignoreList":[0,1]}